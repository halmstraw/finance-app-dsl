{
  "content": [
    {
      "_hidden": false,
      "_offset": 3,
      "_tokenType": {
        "name": "ID",
        "PATTERN": {},
        "tokenTypeIdx": 88,
        "CATEGORIES": [],
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false
      },
      "_length": 7,
      "_range": {
        "start": {
          "character": 3,
          "line": 0
        },
        "end": {
          "character": 10,
          "line": 0
        }
      },
      "grammarSource": {
        "$type": "RuleCall",
        "rule": {
          "$refText": "ID",
          "ref": {
            "$type": "TerminalRule",
            "name": "ID",
            "definition": {
              "$type": "RegexToken",
              "regex": "/[_a-zA-Z][\\w_]*/",
              "$container": "[Circular]",
              "$containerProperty": "definition"
            },
            "fragment": false,
            "hidden": false,
            "$container": {
              "$type": "Grammar",
              "isDeclared": true,
              "name": "FinanceAppDSL",
              "rules": [
                {
                  "$type": "ParserRule",
                  "entry": true,
                  "name": "App",
                  "definition": {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "app",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 0
                      },
                      {
                        "$type": "Assignment",
                        "feature": "name",
                        "operator": "=",
                        "terminal": "[Circular]",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 1
                      },
                      {
                        "$type": "Keyword",
                        "value": "{",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 2
                      },
                      {
                        "$type": "Keyword",
                        "value": "name",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 3
                      },
                      {
                        "$type": "Keyword",
                        "value": ":",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 4
                      },
                      {
                        "$type": "Assignment",
                        "feature": "displayName",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "STRING",
                            "ref": {
                              "$type": "TerminalRule",
                              "name": "STRING",
                              "definition": {
                                "$type": "RegexToken",
                                "regex": "/\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/",
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "fragment": false,
                              "hidden": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 59
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 5
                      },
                      {
                        "$type": "Keyword",
                        "value": "id",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 6
                      },
                      {
                        "$type": "Keyword",
                        "value": ":",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 7
                      },
                      {
                        "$type": "Assignment",
                        "feature": "appId",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "STRING",
                            "ref": "[Circular]"
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 8
                      },
                      {
                        "$type": "Keyword",
                        "value": "version",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 9
                      },
                      {
                        "$type": "Keyword",
                        "value": ":",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 10
                      },
                      {
                        "$type": "Assignment",
                        "feature": "version",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "STRING",
                            "ref": "[Circular]"
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 11
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": "platforms",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 0
                          },
                          {
                            "$type": "Keyword",
                            "value": ":",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 1
                          },
                          {
                            "$type": "Keyword",
                            "value": "[",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 2
                          },
                          {
                            "$type": "Assignment",
                            "feature": "platforms",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$refText": "Platform",
                                "ref": {
                                  "$type": "ParserRule",
                                  "name": "Platform",
                                  "definition": {
                                    "$type": "Assignment",
                                    "feature": "name",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "Alternatives",
                                      "elements": [
                                        {
                                          "$type": "Keyword",
                                          "value": "ios",
                                          "$container": "[Circular]",
                                          "$containerProperty": "elements",
                                          "$containerIndex": 0
                                        },
                                        {
                                          "$type": "Keyword",
                                          "value": "android",
                                          "$container": "[Circular]",
                                          "$containerProperty": "elements",
                                          "$containerIndex": 1
                                        },
                                        {
                                          "$type": "Keyword",
                                          "value": "web",
                                          "$container": "[Circular]",
                                          "$containerProperty": "elements",
                                          "$containerIndex": 2
                                        }
                                      ],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "definition"
                                  },
                                  "definesHiddenTokens": false,
                                  "entry": false,
                                  "fragment": false,
                                  "hiddenTokens": [],
                                  "parameters": [],
                                  "wildcard": false,
                                  "$container": "[Circular]",
                                  "$containerProperty": "rules",
                                  "$containerIndex": 1
                                }
                              },
                              "arguments": [],
                              "$container": "[Circular]",
                              "$containerProperty": "terminal"
                            },
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 3
                          },
                          {
                            "$type": "Group",
                            "elements": [
                              {
                                "$type": "Keyword",
                                "value": ",",
                                "$container": "[Circular]",
                                "$containerProperty": "elements",
                                "$containerIndex": 0
                              },
                              {
                                "$type": "Assignment",
                                "feature": "platforms",
                                "operator": "+=",
                                "terminal": {
                                  "$type": "RuleCall",
                                  "rule": {
                                    "$refText": "Platform",
                                    "ref": "[Circular]"
                                  },
                                  "arguments": [],
                                  "$container": "[Circular]",
                                  "$containerProperty": "terminal"
                                },
                                "$container": "[Circular]",
                                "$containerProperty": "elements",
                                "$containerIndex": 1
                              }
                            ],
                            "cardinality": "*",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 4
                          },
                          {
                            "$type": "Keyword",
                            "value": "]",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 5
                          }
                        ],
                        "cardinality": "?",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 12
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": "theme",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 0
                          },
                          {
                            "$type": "Keyword",
                            "value": ":",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 1
                          },
                          {
                            "$type": "Assignment",
                            "feature": "theme",
                            "operator": "=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$refText": "Theme",
                                "ref": {
                                  "$type": "ParserRule",
                                  "name": "Theme",
                                  "definition": {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Keyword",
                                        "value": "{",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 0
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": "primaryColor",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 1
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": ":",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 2
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "primaryColor",
                                        "operator": "=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "STRING",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 3
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": "secondaryColor",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 4
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": ":",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 5
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "secondaryColor",
                                        "operator": "=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "STRING",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 6
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": "backgroundColor",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 7
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": ":",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 8
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "backgroundColor",
                                        "operator": "=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "STRING",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 9
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": "textColor",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 10
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": ":",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 11
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "textColor",
                                        "operator": "=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "STRING",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 12
                                      },
                                      {
                                        "$type": "Keyword",
                                        "value": "}",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 13
                                      }
                                    ],
                                    "$container": "[Circular]",
                                    "$containerProperty": "definition"
                                  },
                                  "definesHiddenTokens": false,
                                  "entry": false,
                                  "fragment": false,
                                  "hiddenTokens": [],
                                  "parameters": [],
                                  "wildcard": false,
                                  "$container": "[Circular]",
                                  "$containerProperty": "rules",
                                  "$containerIndex": 2
                                }
                              },
                              "arguments": [],
                              "$container": "[Circular]",
                              "$containerProperty": "terminal"
                            },
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 2
                          }
                        ],
                        "cardinality": "?",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 13
                      },
                      {
                        "$type": "Keyword",
                        "value": "}",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 14
                      },
                      {
                        "$type": "Assignment",
                        "feature": "models",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "Model",
                            "ref": {
                              "$type": "ParserRule",
                              "name": "Model",
                              "definition": {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Keyword",
                                    "value": "model",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 0
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "name",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "ID",
                                        "ref": "[Circular]"
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 1
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "{",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 2
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "properties",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "Property",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "Property",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Assignment",
                                                "feature": "name",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ID",
                                                    "ref": "[Circular]"
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "type",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "DataType",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "DataType",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "name",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "Alternatives",
                                                              "elements": [
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "string",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 0
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "number",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 1
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "decimal",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 2
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "boolean",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 3
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "date",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 4
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "array",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 5
                                                                },
                                                                {
                                                                  "$type": "Keyword",
                                                                  "value": "object",
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "elements",
                                                                  "$containerIndex": 6
                                                                }
                                                              ],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "isArray",
                                                            "operator": "?=",
                                                            "terminal": {
                                                              "$type": "Keyword",
                                                              "value": "[]",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "cardinality": "?",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 9
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "features",
                                                "operator": "+=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "PropertyFeature",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "PropertyFeature",
                                                      "definition": {
                                                        "$type": "Alternatives",
                                                        "elements": [
                                                          {
                                                            "$type": "RuleCall",
                                                            "rule": {
                                                              "$refText": "RequiredFeature",
                                                              "ref": {
                                                                "$type": "ParserRule",
                                                                "name": "RequiredFeature",
                                                                "definition": {
                                                                  "$type": "Group",
                                                                  "elements": [
                                                                    {
                                                                      "$type": "Action",
                                                                      "inferredType": {
                                                                        "$type": "InferredType",
                                                                        "name": "RequiredFeature",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "inferredType"
                                                                      },
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 0
                                                                    },
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": "required",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 1
                                                                    }
                                                                  ],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "definition"
                                                                },
                                                                "definesHiddenTokens": false,
                                                                "entry": false,
                                                                "fragment": false,
                                                                "hiddenTokens": [],
                                                                "parameters": [],
                                                                "wildcard": false,
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "rules",
                                                                "$containerIndex": 6
                                                              }
                                                            },
                                                            "arguments": [],
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "RuleCall",
                                                            "rule": {
                                                              "$refText": "DefaultValueFeature",
                                                              "ref": {
                                                                "$type": "ParserRule",
                                                                "name": "DefaultValueFeature",
                                                                "definition": {
                                                                  "$type": "Group",
                                                                  "elements": [
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": "default",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 0
                                                                    },
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": ":",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 1
                                                                    },
                                                                    {
                                                                      "$type": "Assignment",
                                                                      "feature": "value",
                                                                      "operator": "=",
                                                                      "terminal": {
                                                                        "$type": "RuleCall",
                                                                        "rule": {
                                                                          "$refText": "Value",
                                                                          "ref": {
                                                                            "$type": "ParserRule",
                                                                            "name": "Value",
                                                                            "definition": {
                                                                              "$type": "Alternatives",
                                                                              "elements": [
                                                                                {
                                                                                  "$type": "RuleCall",
                                                                                  "rule": {
                                                                                    "$refText": "StringValue",
                                                                                    "ref": {
                                                                                      "$type": "ParserRule",
                                                                                      "name": "StringValue",
                                                                                      "definition": {
                                                                                        "$type": "Assignment",
                                                                                        "feature": "value",
                                                                                        "operator": "=",
                                                                                        "terminal": {
                                                                                          "$type": "RuleCall",
                                                                                          "rule": {
                                                                                            "$refText": "STRING",
                                                                                            "ref": "[Circular]"
                                                                                          },
                                                                                          "arguments": [],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "terminal"
                                                                                        },
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "definition"
                                                                                      },
                                                                                      "definesHiddenTokens": false,
                                                                                      "entry": false,
                                                                                      "fragment": false,
                                                                                      "hiddenTokens": [],
                                                                                      "parameters": [],
                                                                                      "wildcard": false,
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "rules",
                                                                                      "$containerIndex": 12
                                                                                    }
                                                                                  },
                                                                                  "arguments": [],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "elements",
                                                                                  "$containerIndex": 0
                                                                                },
                                                                                {
                                                                                  "$type": "RuleCall",
                                                                                  "rule": {
                                                                                    "$refText": "NumberValue",
                                                                                    "ref": {
                                                                                      "$type": "ParserRule",
                                                                                      "name": "NumberValue",
                                                                                      "definition": {
                                                                                        "$type": "Assignment",
                                                                                        "feature": "value",
                                                                                        "operator": "=",
                                                                                        "terminal": {
                                                                                          "$type": "RuleCall",
                                                                                          "rule": {
                                                                                            "$refText": "NUMBER",
                                                                                            "ref": {
                                                                                              "$type": "TerminalRule",
                                                                                              "name": "NUMBER",
                                                                                              "definition": {
                                                                                                "$type": "RegexToken",
                                                                                                "regex": "/-?[0-9]+(\\.[0-9]+)?/",
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "definition"
                                                                                              },
                                                                                              "fragment": false,
                                                                                              "hidden": false,
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "rules",
                                                                                              "$containerIndex": 60
                                                                                            }
                                                                                          },
                                                                                          "arguments": [],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "terminal"
                                                                                        },
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "definition"
                                                                                      },
                                                                                      "definesHiddenTokens": false,
                                                                                      "entry": false,
                                                                                      "fragment": false,
                                                                                      "hiddenTokens": [],
                                                                                      "parameters": [],
                                                                                      "wildcard": false,
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "rules",
                                                                                      "$containerIndex": 13
                                                                                    }
                                                                                  },
                                                                                  "arguments": [],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "elements",
                                                                                  "$containerIndex": 1
                                                                                },
                                                                                {
                                                                                  "$type": "RuleCall",
                                                                                  "rule": {
                                                                                    "$refText": "BooleanValue",
                                                                                    "ref": {
                                                                                      "$type": "ParserRule",
                                                                                      "name": "BooleanValue",
                                                                                      "definition": {
                                                                                        "$type": "Assignment",
                                                                                        "feature": "value",
                                                                                        "operator": "=",
                                                                                        "terminal": {
                                                                                          "$type": "Alternatives",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "true",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "false",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "terminal"
                                                                                        },
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "definition"
                                                                                      },
                                                                                      "definesHiddenTokens": false,
                                                                                      "entry": false,
                                                                                      "fragment": false,
                                                                                      "hiddenTokens": [],
                                                                                      "parameters": [],
                                                                                      "wildcard": false,
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "rules",
                                                                                      "$containerIndex": 14
                                                                                    }
                                                                                  },
                                                                                  "arguments": [],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "elements",
                                                                                  "$containerIndex": 2
                                                                                },
                                                                                {
                                                                                  "$type": "RuleCall",
                                                                                  "rule": {
                                                                                    "$refText": "NullValue",
                                                                                    "ref": {
                                                                                      "$type": "ParserRule",
                                                                                      "name": "NullValue",
                                                                                      "definition": {
                                                                                        "$type": "Group",
                                                                                        "elements": [
                                                                                          {
                                                                                            "$type": "Action",
                                                                                            "inferredType": {
                                                                                              "$type": "InferredType",
                                                                                              "name": "NullValue",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "inferredType"
                                                                                            },
                                                                                            "$container": "[Circular]",
                                                                                            "$containerProperty": "elements",
                                                                                            "$containerIndex": 0
                                                                                          },
                                                                                          {
                                                                                            "$type": "Keyword",
                                                                                            "value": "null",
                                                                                            "$container": "[Circular]",
                                                                                            "$containerProperty": "elements",
                                                                                            "$containerIndex": 1
                                                                                          }
                                                                                        ],
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "definition"
                                                                                      },
                                                                                      "definesHiddenTokens": false,
                                                                                      "entry": false,
                                                                                      "fragment": false,
                                                                                      "hiddenTokens": [],
                                                                                      "parameters": [],
                                                                                      "wildcard": false,
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "rules",
                                                                                      "$containerIndex": 15
                                                                                    }
                                                                                  },
                                                                                  "arguments": [],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "elements",
                                                                                  "$containerIndex": 3
                                                                                }
                                                                              ],
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "definition"
                                                                            },
                                                                            "definesHiddenTokens": false,
                                                                            "entry": false,
                                                                            "fragment": false,
                                                                            "hiddenTokens": [],
                                                                            "parameters": [],
                                                                            "wildcard": false,
                                                                            "$container": "[Circular]",
                                                                            "$containerProperty": "rules",
                                                                            "$containerIndex": 11
                                                                          }
                                                                        },
                                                                        "arguments": [],
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "terminal"
                                                                      },
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 2
                                                                    }
                                                                  ],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "definition"
                                                                },
                                                                "definesHiddenTokens": false,
                                                                "entry": false,
                                                                "fragment": false,
                                                                "hiddenTokens": [],
                                                                "parameters": [],
                                                                "wildcard": false,
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "rules",
                                                                "$containerIndex": 7
                                                              }
                                                            },
                                                            "arguments": [],
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "RuleCall",
                                                            "rule": {
                                                              "$refText": "EnumValuesFeature",
                                                              "ref": {
                                                                "$type": "ParserRule",
                                                                "name": "EnumValuesFeature",
                                                                "definition": {
                                                                  "$type": "Group",
                                                                  "elements": [
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": "enum",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 0
                                                                    },
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": ":",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 1
                                                                    },
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": "[",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 2
                                                                    },
                                                                    {
                                                                      "$type": "Assignment",
                                                                      "feature": "values",
                                                                      "operator": "+=",
                                                                      "terminal": {
                                                                        "$type": "RuleCall",
                                                                        "rule": {
                                                                          "$refText": "EnumValue",
                                                                          "ref": {
                                                                            "$type": "ParserRule",
                                                                            "name": "EnumValue",
                                                                            "definition": {
                                                                              "$type": "Assignment",
                                                                              "feature": "value",
                                                                              "operator": "=",
                                                                              "terminal": {
                                                                                "$type": "Alternatives",
                                                                                "elements": [
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "ID",
                                                                                      "ref": "[Circular]"
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 0
                                                                                  },
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "STRING",
                                                                                      "ref": "[Circular]"
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 1
                                                                                  }
                                                                                ],
                                                                                "$container": "[Circular]",
                                                                                "$containerProperty": "terminal"
                                                                              },
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "definition"
                                                                            },
                                                                            "definesHiddenTokens": false,
                                                                            "entry": false,
                                                                            "fragment": false,
                                                                            "hiddenTokens": [],
                                                                            "parameters": [],
                                                                            "wildcard": false,
                                                                            "$container": "[Circular]",
                                                                            "$containerProperty": "rules",
                                                                            "$containerIndex": 10
                                                                          }
                                                                        },
                                                                        "arguments": [],
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "terminal"
                                                                      },
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 3
                                                                    },
                                                                    {
                                                                      "$type": "Group",
                                                                      "elements": [
                                                                        {
                                                                          "$type": "Keyword",
                                                                          "value": ",",
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "elements",
                                                                          "$containerIndex": 0
                                                                        },
                                                                        {
                                                                          "$type": "Assignment",
                                                                          "feature": "values",
                                                                          "operator": "+=",
                                                                          "terminal": {
                                                                            "$type": "RuleCall",
                                                                            "rule": {
                                                                              "$refText": "EnumValue",
                                                                              "ref": "[Circular]"
                                                                            },
                                                                            "arguments": [],
                                                                            "$container": "[Circular]",
                                                                            "$containerProperty": "terminal"
                                                                          },
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "elements",
                                                                          "$containerIndex": 1
                                                                        }
                                                                      ],
                                                                      "cardinality": "*",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 4
                                                                    },
                                                                    {
                                                                      "$type": "Keyword",
                                                                      "value": "]",
                                                                      "$container": "[Circular]",
                                                                      "$containerProperty": "elements",
                                                                      "$containerIndex": 5
                                                                    }
                                                                  ],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "definition"
                                                                },
                                                                "definesHiddenTokens": false,
                                                                "entry": false,
                                                                "fragment": false,
                                                                "hiddenTokens": [],
                                                                "parameters": [],
                                                                "wildcard": false,
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "rules",
                                                                "$containerIndex": 8
                                                              }
                                                            },
                                                            "arguments": [],
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 5
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "*",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 4
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "cardinality": "*",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 3
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "}",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 4
                                  }
                                ],
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "definesHiddenTokens": false,
                              "entry": false,
                              "fragment": false,
                              "hiddenTokens": [],
                              "parameters": [],
                              "wildcard": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 3
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "cardinality": "*",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 15
                      },
                      {
                        "$type": "Assignment",
                        "feature": "screens",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "Screen",
                            "ref": {
                              "$type": "ParserRule",
                              "name": "Screen",
                              "definition": {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Keyword",
                                    "value": "screen",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 0
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "name",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "ID",
                                        "ref": "[Circular]"
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 1
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "{",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 2
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "title",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 3
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 4
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "title",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "STRING",
                                        "ref": "[Circular]"
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 5
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "isInitial",
                                    "operator": "?=",
                                    "terminal": {
                                      "$type": "Keyword",
                                      "value": "initial",
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "cardinality": "?",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 6
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "params",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "ScreenParams",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "ScreenParams",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Keyword",
                                                "value": "params",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "{",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "parameters",
                                                "operator": "+=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "Parameter",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "Parameter",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "name",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "ID",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "type",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "DataType",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "isRequired",
                                                            "operator": "?=",
                                                            "terminal": {
                                                              "$type": "Keyword",
                                                              "value": "required",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "cardinality": "?",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 3
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 18
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "*",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "}",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 4
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 17
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "cardinality": "?",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 7
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "layout",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "Layout",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "Layout",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Keyword",
                                                "value": "layout",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "{",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "type",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 4
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "type",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "LayoutType",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "LayoutType",
                                                      "definition": {
                                                        "$type": "Assignment",
                                                        "feature": "type",
                                                        "operator": "=",
                                                        "terminal": {
                                                          "$type": "Alternatives",
                                                          "elements": [
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "stack",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 0
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "form",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 1
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "scroll",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 2
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "tabs",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 3
                                                            }
                                                          ],
                                                          "$container": "[Circular]",
                                                          "$containerProperty": "terminal"
                                                        },
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 20
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 5
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "components",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ComponentList",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "ComponentList",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "components",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "[",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "items",
                                                            "operator": "+=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "Component",
                                                                "ref": {
                                                                  "$type": "ParserRule",
                                                                  "name": "Component",
                                                                  "definition": {
                                                                    "$type": "Group",
                                                                    "elements": [
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "{",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 0
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "type",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 1
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 2
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "type",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "ComponentType",
                                                                            "ref": {
                                                                              "$type": "ParserRule",
                                                                              "name": "ComponentType",
                                                                              "definition": {
                                                                                "$type": "Assignment",
                                                                                "feature": "type",
                                                                                "operator": "=",
                                                                                "terminal": {
                                                                                  "$type": "Alternatives",
                                                                                  "elements": [
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "header",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 0
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "text",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 1
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "button",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 2
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "list",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 3
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "accountSummaryCard",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 4
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "accountCard",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 5
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "balanceCard",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 6
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "tabs",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 7
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "chart",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 8
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "divider",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 9
                                                                                    }
                                                                                  ],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "terminal"
                                                                                },
                                                                                "$container": "[Circular]",
                                                                                "$containerProperty": "definition"
                                                                              },
                                                                              "definesHiddenTokens": false,
                                                                              "entry": false,
                                                                              "fragment": false,
                                                                              "hiddenTokens": [],
                                                                              "parameters": [],
                                                                              "wildcard": false,
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "rules",
                                                                              "$containerIndex": 23
                                                                            }
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 3
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "properties",
                                                                        "operator": "+=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "ComponentProperty",
                                                                            "ref": {
                                                                              "$type": "ParserRule",
                                                                              "name": "ComponentProperty",
                                                                              "definition": {
                                                                                "$type": "Alternatives",
                                                                                "elements": [
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "StringProperty",
                                                                                      "ref": {
                                                                                        "$type": "ParserRule",
                                                                                        "name": "StringProperty",
                                                                                        "definition": {
                                                                                          "$type": "Group",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "name",
                                                                                              "operator": "=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "ID",
                                                                                                  "ref": "[Circular]"
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": ":",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            },
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "value",
                                                                                              "operator": "=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "STRING",
                                                                                                  "ref": "[Circular]"
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 2
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "definition"
                                                                                        },
                                                                                        "definesHiddenTokens": false,
                                                                                        "entry": false,
                                                                                        "fragment": false,
                                                                                        "hiddenTokens": [],
                                                                                        "parameters": [],
                                                                                        "wildcard": false,
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "rules",
                                                                                        "$containerIndex": 25
                                                                                      }
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 0
                                                                                  },
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "DataProperty",
                                                                                      "ref": {
                                                                                        "$type": "ParserRule",
                                                                                        "name": "DataProperty",
                                                                                        "definition": {
                                                                                          "$type": "Group",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "data",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": ":",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            },
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "value",
                                                                                              "operator": "=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "DataPath",
                                                                                                  "ref": {
                                                                                                    "$type": "ParserRule",
                                                                                                    "name": "DataPath",
                                                                                                    "definition": {
                                                                                                      "$type": "Group",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "$type": "Action",
                                                                                                          "inferredType": {
                                                                                                            "$type": "InferredType",
                                                                                                            "name": "FQN",
                                                                                                            "$container": "[Circular]",
                                                                                                            "$containerProperty": "inferredType"
                                                                                                          },
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 0
                                                                                                        },
                                                                                                        {
                                                                                                          "$type": "RuleCall",
                                                                                                          "rule": {
                                                                                                            "$refText": "ID",
                                                                                                            "ref": "[Circular]"
                                                                                                          },
                                                                                                          "arguments": [],
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 1
                                                                                                        },
                                                                                                        {
                                                                                                          "$type": "Group",
                                                                                                          "elements": [
                                                                                                            {
                                                                                                              "$type": "Keyword",
                                                                                                              "value": ".",
                                                                                                              "$container": "[Circular]",
                                                                                                              "$containerProperty": "elements",
                                                                                                              "$containerIndex": 0
                                                                                                            },
                                                                                                            {
                                                                                                              "$type": "RuleCall",
                                                                                                              "rule": {
                                                                                                                "$refText": "ID",
                                                                                                                "ref": "[Circular]"
                                                                                                              },
                                                                                                              "arguments": [],
                                                                                                              "$container": "[Circular]",
                                                                                                              "$containerProperty": "elements",
                                                                                                              "$containerIndex": 1
                                                                                                            }
                                                                                                          ],
                                                                                                          "cardinality": "*",
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 2
                                                                                                        }
                                                                                                      ],
                                                                                                      "$container": "[Circular]",
                                                                                                      "$containerProperty": "definition"
                                                                                                    },
                                                                                                    "definesHiddenTokens": false,
                                                                                                    "entry": false,
                                                                                                    "fragment": false,
                                                                                                    "hiddenTokens": [],
                                                                                                    "parameters": [],
                                                                                                    "wildcard": false,
                                                                                                    "$container": "[Circular]",
                                                                                                    "$containerProperty": "rules",
                                                                                                    "$containerIndex": 27
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 2
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "definition"
                                                                                        },
                                                                                        "definesHiddenTokens": false,
                                                                                        "entry": false,
                                                                                        "fragment": false,
                                                                                        "hiddenTokens": [],
                                                                                        "parameters": [],
                                                                                        "wildcard": false,
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "rules",
                                                                                        "$containerIndex": 26
                                                                                      }
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 1
                                                                                  },
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "ActionProperty",
                                                                                      "ref": {
                                                                                        "$type": "ParserRule",
                                                                                        "name": "ActionProperty",
                                                                                        "definition": {
                                                                                          "$type": "Group",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "actions",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": ":",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "{",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 2
                                                                                            },
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "actions",
                                                                                              "operator": "+=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "Action",
                                                                                                  "ref": {
                                                                                                    "$type": "ParserRule",
                                                                                                    "name": "Action",
                                                                                                    "definition": {
                                                                                                      "$type": "Group",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "$type": "Assignment",
                                                                                                          "feature": "name",
                                                                                                          "operator": "=",
                                                                                                          "terminal": {
                                                                                                            "$type": "RuleCall",
                                                                                                            "rule": {
                                                                                                              "$refText": "ID",
                                                                                                              "ref": "[Circular]"
                                                                                                            },
                                                                                                            "arguments": [],
                                                                                                            "$container": "[Circular]",
                                                                                                            "$containerProperty": "terminal"
                                                                                                          },
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 0
                                                                                                        },
                                                                                                        {
                                                                                                          "$type": "Keyword",
                                                                                                          "value": ":",
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 1
                                                                                                        },
                                                                                                        {
                                                                                                          "$type": "Alternatives",
                                                                                                          "elements": [
                                                                                                            {
                                                                                                              "$type": "Assignment",
                                                                                                              "feature": "navigationAction",
                                                                                                              "operator": "=",
                                                                                                              "terminal": {
                                                                                                                "$type": "RuleCall",
                                                                                                                "rule": {
                                                                                                                  "$refText": "NavigationAction",
                                                                                                                  "ref": {
                                                                                                                    "$type": "ParserRule",
                                                                                                                    "name": "NavigationAction",
                                                                                                                    "definition": {
                                                                                                                      "$type": "Group",
                                                                                                                      "elements": [
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "{",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 0
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "navigate",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 1
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": ":",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 2
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Assignment",
                                                                                                                          "feature": "target",
                                                                                                                          "operator": "=",
                                                                                                                          "terminal": {
                                                                                                                            "$type": "RuleCall",
                                                                                                                            "rule": {
                                                                                                                              "$refText": "ID",
                                                                                                                              "ref": "[Circular]"
                                                                                                                            },
                                                                                                                            "arguments": [],
                                                                                                                            "$container": "[Circular]",
                                                                                                                            "$containerProperty": "terminal"
                                                                                                                          },
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 3
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Assignment",
                                                                                                                          "feature": "params",
                                                                                                                          "operator": "=",
                                                                                                                          "terminal": {
                                                                                                                            "$type": "RuleCall",
                                                                                                                            "rule": {
                                                                                                                              "$refText": "ActionParams",
                                                                                                                              "ref": {
                                                                                                                                "$type": "ParserRule",
                                                                                                                                "name": "ActionParams",
                                                                                                                                "definition": {
                                                                                                                                  "$type": "Group",
                                                                                                                                  "elements": [
                                                                                                                                    {
                                                                                                                                      "$type": "Keyword",
                                                                                                                                      "value": "params",
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 0
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "$type": "Keyword",
                                                                                                                                      "value": ":",
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 1
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "$type": "Keyword",
                                                                                                                                      "value": "{",
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 2
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "$type": "Assignment",
                                                                                                                                      "feature": "parameters",
                                                                                                                                      "operator": "+=",
                                                                                                                                      "terminal": {
                                                                                                                                        "$type": "RuleCall",
                                                                                                                                        "rule": {
                                                                                                                                          "$refText": "StringProperty",
                                                                                                                                          "ref": "[Circular]"
                                                                                                                                        },
                                                                                                                                        "arguments": [],
                                                                                                                                        "$container": "[Circular]",
                                                                                                                                        "$containerProperty": "terminal"
                                                                                                                                      },
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 3
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "$type": "Group",
                                                                                                                                      "elements": [
                                                                                                                                        {
                                                                                                                                          "$type": "Keyword",
                                                                                                                                          "value": ",",
                                                                                                                                          "$container": "[Circular]",
                                                                                                                                          "$containerProperty": "elements",
                                                                                                                                          "$containerIndex": 0
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "$type": "Assignment",
                                                                                                                                          "feature": "parameters",
                                                                                                                                          "operator": "+=",
                                                                                                                                          "terminal": {
                                                                                                                                            "$type": "RuleCall",
                                                                                                                                            "rule": {
                                                                                                                                              "$refText": "StringProperty",
                                                                                                                                              "ref": "[Circular]"
                                                                                                                                            },
                                                                                                                                            "arguments": [],
                                                                                                                                            "$container": "[Circular]",
                                                                                                                                            "$containerProperty": "terminal"
                                                                                                                                          },
                                                                                                                                          "$container": "[Circular]",
                                                                                                                                          "$containerProperty": "elements",
                                                                                                                                          "$containerIndex": 1
                                                                                                                                        }
                                                                                                                                      ],
                                                                                                                                      "cardinality": "*",
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 4
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "$type": "Keyword",
                                                                                                                                      "value": "}",
                                                                                                                                      "$container": "[Circular]",
                                                                                                                                      "$containerProperty": "elements",
                                                                                                                                      "$containerIndex": 5
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                                  "$container": "[Circular]",
                                                                                                                                  "$containerProperty": "definition"
                                                                                                                                },
                                                                                                                                "definesHiddenTokens": false,
                                                                                                                                "entry": false,
                                                                                                                                "fragment": false,
                                                                                                                                "hiddenTokens": [],
                                                                                                                                "parameters": [],
                                                                                                                                "wildcard": false,
                                                                                                                                "$container": "[Circular]",
                                                                                                                                "$containerProperty": "rules",
                                                                                                                                "$containerIndex": 42
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "arguments": [],
                                                                                                                            "$container": "[Circular]",
                                                                                                                            "$containerProperty": "terminal"
                                                                                                                          },
                                                                                                                          "cardinality": "?",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 4
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "}",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 5
                                                                                                                        }
                                                                                                                      ],
                                                                                                                      "$container": "[Circular]",
                                                                                                                      "$containerProperty": "definition"
                                                                                                                    },
                                                                                                                    "definesHiddenTokens": false,
                                                                                                                    "entry": false,
                                                                                                                    "fragment": false,
                                                                                                                    "hiddenTokens": [],
                                                                                                                    "parameters": [],
                                                                                                                    "wildcard": false,
                                                                                                                    "$container": "[Circular]",
                                                                                                                    "$containerProperty": "rules",
                                                                                                                    "$containerIndex": 40
                                                                                                                  }
                                                                                                                },
                                                                                                                "arguments": [],
                                                                                                                "$container": "[Circular]",
                                                                                                                "$containerProperty": "terminal"
                                                                                                              },
                                                                                                              "$container": "[Circular]",
                                                                                                              "$containerProperty": "elements",
                                                                                                              "$containerIndex": 0
                                                                                                            },
                                                                                                            {
                                                                                                              "$type": "Assignment",
                                                                                                              "feature": "apiAction",
                                                                                                              "operator": "=",
                                                                                                              "terminal": {
                                                                                                                "$type": "RuleCall",
                                                                                                                "rule": {
                                                                                                                  "$refText": "APIAction",
                                                                                                                  "ref": {
                                                                                                                    "$type": "ParserRule",
                                                                                                                    "name": "APIAction",
                                                                                                                    "definition": {
                                                                                                                      "$type": "Group",
                                                                                                                      "elements": [
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "{",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 0
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "api",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 1
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": ":",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 2
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Assignment",
                                                                                                                          "feature": "endpoint",
                                                                                                                          "operator": "=",
                                                                                                                          "terminal": {
                                                                                                                            "$type": "RuleCall",
                                                                                                                            "rule": {
                                                                                                                              "$refText": "ID",
                                                                                                                              "ref": "[Circular]"
                                                                                                                            },
                                                                                                                            "arguments": [],
                                                                                                                            "$container": "[Circular]",
                                                                                                                            "$containerProperty": "terminal"
                                                                                                                          },
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 3
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Assignment",
                                                                                                                          "feature": "successAction",
                                                                                                                          "operator": "=",
                                                                                                                          "terminal": {
                                                                                                                            "$type": "RuleCall",
                                                                                                                            "rule": {
                                                                                                                              "$refText": "NavigationAction",
                                                                                                                              "ref": "[Circular]"
                                                                                                                            },
                                                                                                                            "arguments": [],
                                                                                                                            "$container": "[Circular]",
                                                                                                                            "$containerProperty": "terminal"
                                                                                                                          },
                                                                                                                          "cardinality": "?",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 4
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "$type": "Keyword",
                                                                                                                          "value": "}",
                                                                                                                          "$container": "[Circular]",
                                                                                                                          "$containerProperty": "elements",
                                                                                                                          "$containerIndex": 5
                                                                                                                        }
                                                                                                                      ],
                                                                                                                      "$container": "[Circular]",
                                                                                                                      "$containerProperty": "definition"
                                                                                                                    },
                                                                                                                    "definesHiddenTokens": false,
                                                                                                                    "entry": false,
                                                                                                                    "fragment": false,
                                                                                                                    "hiddenTokens": [],
                                                                                                                    "parameters": [],
                                                                                                                    "wildcard": false,
                                                                                                                    "$container": "[Circular]",
                                                                                                                    "$containerProperty": "rules",
                                                                                                                    "$containerIndex": 41
                                                                                                                  }
                                                                                                                },
                                                                                                                "arguments": [],
                                                                                                                "$container": "[Circular]",
                                                                                                                "$containerProperty": "terminal"
                                                                                                              },
                                                                                                              "$container": "[Circular]",
                                                                                                              "$containerProperty": "elements",
                                                                                                              "$containerIndex": 1
                                                                                                            }
                                                                                                          ],
                                                                                                          "$container": "[Circular]",
                                                                                                          "$containerProperty": "elements",
                                                                                                          "$containerIndex": 2
                                                                                                        }
                                                                                                      ],
                                                                                                      "$container": "[Circular]",
                                                                                                      "$containerProperty": "definition"
                                                                                                    },
                                                                                                    "definesHiddenTokens": false,
                                                                                                    "entry": false,
                                                                                                    "fragment": false,
                                                                                                    "hiddenTokens": [],
                                                                                                    "parameters": [],
                                                                                                    "wildcard": false,
                                                                                                    "$container": "[Circular]",
                                                                                                    "$containerProperty": "rules",
                                                                                                    "$containerIndex": 39
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 3
                                                                                            },
                                                                                            {
                                                                                              "$type": "Group",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "$type": "Keyword",
                                                                                                  "value": ",",
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 0
                                                                                                },
                                                                                                {
                                                                                                  "$type": "Assignment",
                                                                                                  "feature": "actions",
                                                                                                  "operator": "+=",
                                                                                                  "terminal": {
                                                                                                    "$type": "RuleCall",
                                                                                                    "rule": {
                                                                                                      "$refText": "Action",
                                                                                                      "ref": "[Circular]"
                                                                                                    },
                                                                                                    "arguments": [],
                                                                                                    "$container": "[Circular]",
                                                                                                    "$containerProperty": "terminal"
                                                                                                  },
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 1
                                                                                                }
                                                                                              ],
                                                                                              "cardinality": "*",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 4
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "}",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 5
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "definition"
                                                                                        },
                                                                                        "definesHiddenTokens": false,
                                                                                        "entry": false,
                                                                                        "fragment": false,
                                                                                        "hiddenTokens": [],
                                                                                        "parameters": [],
                                                                                        "wildcard": false,
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "rules",
                                                                                        "$containerIndex": 29
                                                                                      }
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 2
                                                                                  },
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "PropertyMap",
                                                                                      "ref": {
                                                                                        "$type": "ParserRule",
                                                                                        "name": "PropertyMap",
                                                                                        "definition": {
                                                                                          "$type": "Group",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "properties",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": ":",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "{",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 2
                                                                                            },
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "properties",
                                                                                              "operator": "+=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "StringProperty",
                                                                                                  "ref": "[Circular]"
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 3
                                                                                            },
                                                                                            {
                                                                                              "$type": "Group",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "$type": "Keyword",
                                                                                                  "value": ",",
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 0
                                                                                                },
                                                                                                {
                                                                                                  "$type": "Assignment",
                                                                                                  "feature": "properties",
                                                                                                  "operator": "+=",
                                                                                                  "terminal": {
                                                                                                    "$type": "RuleCall",
                                                                                                    "rule": {
                                                                                                      "$refText": "StringProperty",
                                                                                                      "ref": "[Circular]"
                                                                                                    },
                                                                                                    "arguments": [],
                                                                                                    "$container": "[Circular]",
                                                                                                    "$containerProperty": "terminal"
                                                                                                  },
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 1
                                                                                                }
                                                                                              ],
                                                                                              "cardinality": "*",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 4
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "}",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 5
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "definition"
                                                                                        },
                                                                                        "definesHiddenTokens": false,
                                                                                        "entry": false,
                                                                                        "fragment": false,
                                                                                        "hiddenTokens": [],
                                                                                        "parameters": [],
                                                                                        "wildcard": false,
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "rules",
                                                                                        "$containerIndex": 30
                                                                                      }
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 3
                                                                                  },
                                                                                  {
                                                                                    "$type": "RuleCall",
                                                                                    "rule": {
                                                                                      "$refText": "ItemsProperty",
                                                                                      "ref": {
                                                                                        "$type": "ParserRule",
                                                                                        "name": "ItemsProperty",
                                                                                        "definition": {
                                                                                          "$type": "Group",
                                                                                          "elements": [
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "items",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 0
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": ":",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 1
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "[",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 2
                                                                                            },
                                                                                            {
                                                                                              "$type": "Assignment",
                                                                                              "feature": "items",
                                                                                              "operator": "+=",
                                                                                              "terminal": {
                                                                                                "$type": "RuleCall",
                                                                                                "rule": {
                                                                                                  "$refText": "Component",
                                                                                                  "ref": "[Circular]"
                                                                                                },
                                                                                                "arguments": [],
                                                                                                "$container": "[Circular]",
                                                                                                "$containerProperty": "terminal"
                                                                                              },
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 3
                                                                                            },
                                                                                            {
                                                                                              "$type": "Group",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "$type": "Keyword",
                                                                                                  "value": ",",
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 0
                                                                                                },
                                                                                                {
                                                                                                  "$type": "Assignment",
                                                                                                  "feature": "items",
                                                                                                  "operator": "+=",
                                                                                                  "terminal": {
                                                                                                    "$type": "RuleCall",
                                                                                                    "rule": {
                                                                                                      "$refText": "Component",
                                                                                                      "ref": "[Circular]"
                                                                                                    },
                                                                                                    "arguments": [],
                                                                                                    "$container": "[Circular]",
                                                                                                    "$containerProperty": "terminal"
                                                                                                  },
                                                                                                  "$container": "[Circular]",
                                                                                                  "$containerProperty": "elements",
                                                                                                  "$containerIndex": 1
                                                                                                }
                                                                                              ],
                                                                                              "cardinality": "*",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 4
                                                                                            },
                                                                                            {
                                                                                              "$type": "Keyword",
                                                                                              "value": "]",
                                                                                              "$container": "[Circular]",
                                                                                              "$containerProperty": "elements",
                                                                                              "$containerIndex": 5
                                                                                            }
                                                                                          ],
                                                                                          "$container": "[Circular]",
                                                                                          "$containerProperty": "definition"
                                                                                        },
                                                                                        "definesHiddenTokens": false,
                                                                                        "entry": false,
                                                                                        "fragment": false,
                                                                                        "hiddenTokens": [],
                                                                                        "parameters": [],
                                                                                        "wildcard": false,
                                                                                        "$container": "[Circular]",
                                                                                        "$containerProperty": "rules",
                                                                                        "$containerIndex": 31
                                                                                      }
                                                                                    },
                                                                                    "arguments": [],
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 4
                                                                                  }
                                                                                ],
                                                                                "$container": "[Circular]",
                                                                                "$containerProperty": "definition"
                                                                              },
                                                                              "definesHiddenTokens": false,
                                                                              "entry": false,
                                                                              "fragment": false,
                                                                              "hiddenTokens": [],
                                                                              "parameters": [],
                                                                              "wildcard": false,
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "rules",
                                                                              "$containerIndex": 24
                                                                            }
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "cardinality": "*",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 4
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "}",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 5
                                                                      }
                                                                    ],
                                                                    "$container": "[Circular]",
                                                                    "$containerProperty": "definition"
                                                                  },
                                                                  "definesHiddenTokens": false,
                                                                  "entry": false,
                                                                  "fragment": false,
                                                                  "hiddenTokens": [],
                                                                  "parameters": [],
                                                                  "wildcard": false,
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "rules",
                                                                  "$containerIndex": 22
                                                                }
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 3
                                                          },
                                                          {
                                                            "$type": "Group",
                                                            "elements": [
                                                              {
                                                                "$type": "Keyword",
                                                                "value": ",",
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 0
                                                              },
                                                              {
                                                                "$type": "Assignment",
                                                                "feature": "items",
                                                                "operator": "+=",
                                                                "terminal": {
                                                                  "$type": "RuleCall",
                                                                  "rule": {
                                                                    "$refText": "Component",
                                                                    "ref": "[Circular]"
                                                                  },
                                                                  "arguments": [],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "terminal"
                                                                },
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 1
                                                              }
                                                            ],
                                                            "cardinality": "*",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 4
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "]",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 5
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 21
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 6
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "fields",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "FormFieldList",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "FormFieldList",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "fields",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "[",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "fields",
                                                            "operator": "+=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "FormField",
                                                                "ref": {
                                                                  "$type": "ParserRule",
                                                                  "name": "FormField",
                                                                  "definition": {
                                                                    "$type": "Group",
                                                                    "elements": [
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "{",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 0
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "type",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 1
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 2
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "type",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "FormFieldType",
                                                                            "ref": {
                                                                              "$type": "ParserRule",
                                                                              "name": "FormFieldType",
                                                                              "definition": {
                                                                                "$type": "Assignment",
                                                                                "feature": "type",
                                                                                "operator": "=",
                                                                                "terminal": {
                                                                                  "$type": "Alternatives",
                                                                                  "elements": [
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "text",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 0
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "number",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 1
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "toggle",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 2
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "select",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 3
                                                                                    },
                                                                                    {
                                                                                      "$type": "Keyword",
                                                                                      "value": "datePicker",
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "elements",
                                                                                      "$containerIndex": 4
                                                                                    }
                                                                                  ],
                                                                                  "$container": "[Circular]",
                                                                                  "$containerProperty": "terminal"
                                                                                },
                                                                                "$container": "[Circular]",
                                                                                "$containerProperty": "definition"
                                                                              },
                                                                              "definesHiddenTokens": false,
                                                                              "entry": false,
                                                                              "fragment": false,
                                                                              "hiddenTokens": [],
                                                                              "parameters": [],
                                                                              "wildcard": false,
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "rules",
                                                                              "$containerIndex": 34
                                                                            }
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 3
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "name",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 4
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 5
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "name",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "ID",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 6
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "label",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 7
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 8
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "label",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "STRING",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 9
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "isRequired",
                                                                        "operator": "?=",
                                                                        "terminal": {
                                                                          "$type": "Keyword",
                                                                          "value": "required",
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "cardinality": "?",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 10
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "properties",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "PropertyMap",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "cardinality": "?",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 11
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "options",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "FieldOptions",
                                                                            "ref": {
                                                                              "$type": "ParserRule",
                                                                              "name": "FieldOptions",
                                                                              "definition": {
                                                                                "$type": "Group",
                                                                                "elements": [
                                                                                  {
                                                                                    "$type": "Keyword",
                                                                                    "value": "options",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 0
                                                                                  },
                                                                                  {
                                                                                    "$type": "Keyword",
                                                                                    "value": ":",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 1
                                                                                  },
                                                                                  {
                                                                                    "$type": "Keyword",
                                                                                    "value": "{",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 2
                                                                                  },
                                                                                  {
                                                                                    "$type": "Assignment",
                                                                                    "feature": "dataSource",
                                                                                    "operator": "=",
                                                                                    "terminal": {
                                                                                      "$type": "RuleCall",
                                                                                      "rule": {
                                                                                        "$refText": "DataProperty",
                                                                                        "ref": "[Circular]"
                                                                                      },
                                                                                      "arguments": [],
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "terminal"
                                                                                    },
                                                                                    "cardinality": "?",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 3
                                                                                  },
                                                                                  {
                                                                                    "$type": "Assignment",
                                                                                    "feature": "labelField",
                                                                                    "operator": "=",
                                                                                    "terminal": {
                                                                                      "$type": "RuleCall",
                                                                                      "rule": {
                                                                                        "$refText": "StringProperty",
                                                                                        "ref": "[Circular]"
                                                                                      },
                                                                                      "arguments": [],
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "terminal"
                                                                                    },
                                                                                    "cardinality": "?",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 4
                                                                                  },
                                                                                  {
                                                                                    "$type": "Assignment",
                                                                                    "feature": "valueField",
                                                                                    "operator": "=",
                                                                                    "terminal": {
                                                                                      "$type": "RuleCall",
                                                                                      "rule": {
                                                                                        "$refText": "StringProperty",
                                                                                        "ref": "[Circular]"
                                                                                      },
                                                                                      "arguments": [],
                                                                                      "$container": "[Circular]",
                                                                                      "$containerProperty": "terminal"
                                                                                    },
                                                                                    "cardinality": "?",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 5
                                                                                  },
                                                                                  {
                                                                                    "$type": "Keyword",
                                                                                    "value": "}",
                                                                                    "$container": "[Circular]",
                                                                                    "$containerProperty": "elements",
                                                                                    "$containerIndex": 6
                                                                                  }
                                                                                ],
                                                                                "$container": "[Circular]",
                                                                                "$containerProperty": "definition"
                                                                              },
                                                                              "definesHiddenTokens": false,
                                                                              "entry": false,
                                                                              "fragment": false,
                                                                              "hiddenTokens": [],
                                                                              "parameters": [],
                                                                              "wildcard": false,
                                                                              "$container": "[Circular]",
                                                                              "$containerProperty": "rules",
                                                                              "$containerIndex": 35
                                                                            }
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "cardinality": "?",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 12
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "}",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 13
                                                                      }
                                                                    ],
                                                                    "$container": "[Circular]",
                                                                    "$containerProperty": "definition"
                                                                  },
                                                                  "definesHiddenTokens": false,
                                                                  "entry": false,
                                                                  "fragment": false,
                                                                  "hiddenTokens": [],
                                                                  "parameters": [],
                                                                  "wildcard": false,
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "rules",
                                                                  "$containerIndex": 33
                                                                }
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 3
                                                          },
                                                          {
                                                            "$type": "Group",
                                                            "elements": [
                                                              {
                                                                "$type": "Keyword",
                                                                "value": ",",
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 0
                                                              },
                                                              {
                                                                "$type": "Assignment",
                                                                "feature": "fields",
                                                                "operator": "+=",
                                                                "terminal": {
                                                                  "$type": "RuleCall",
                                                                  "rule": {
                                                                    "$refText": "FormField",
                                                                    "ref": "[Circular]"
                                                                  },
                                                                  "arguments": [],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "terminal"
                                                                },
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 1
                                                              }
                                                            ],
                                                            "cardinality": "*",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 4
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "]",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 5
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 32
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 7
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "actions",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ActionList",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "ActionList",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "actions",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "{",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "actions",
                                                            "operator": "+=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "Action",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 3
                                                          },
                                                          {
                                                            "$type": "Group",
                                                            "elements": [
                                                              {
                                                                "$type": "Keyword",
                                                                "value": ",",
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 0
                                                              },
                                                              {
                                                                "$type": "Assignment",
                                                                "feature": "actions",
                                                                "operator": "+=",
                                                                "terminal": {
                                                                  "$type": "RuleCall",
                                                                  "rule": {
                                                                    "$refText": "Action",
                                                                    "ref": "[Circular]"
                                                                  },
                                                                  "arguments": [],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "terminal"
                                                                },
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 1
                                                              }
                                                            ],
                                                            "cardinality": "*",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 4
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "}",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 5
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 38
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 8
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "submitButton",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "SubmitButton",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "SubmitButton",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "submitButton",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "label",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "STRING",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 36
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 9
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "cancelButton",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "CancelButton",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "CancelButton",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "cancelButton",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "label",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "STRING",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 37
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 10
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "}",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 11
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 19
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 8
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "}",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 9
                                  }
                                ],
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "definesHiddenTokens": false,
                              "entry": false,
                              "fragment": false,
                              "hiddenTokens": [],
                              "parameters": [],
                              "wildcard": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 16
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "cardinality": "*",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 16
                      },
                      {
                        "$type": "Assignment",
                        "feature": "navigation",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "Navigation",
                            "ref": {
                              "$type": "ParserRule",
                              "name": "Navigation",
                              "definition": {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Keyword",
                                    "value": "navigation",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 0
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 1
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "{",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 2
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "type",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 3
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 4
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "type",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "NavigationType",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "NavigationType",
                                          "definition": {
                                            "$type": "Assignment",
                                            "feature": "type",
                                            "operator": "=",
                                            "terminal": {
                                              "$type": "Alternatives",
                                              "elements": [
                                                {
                                                  "$type": "Keyword",
                                                  "value": "tab",
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "elements",
                                                  "$containerIndex": 0
                                                },
                                                {
                                                  "$type": "Keyword",
                                                  "value": "drawer",
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "elements",
                                                  "$containerIndex": 1
                                                },
                                                {
                                                  "$type": "Keyword",
                                                  "value": "stack",
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "elements",
                                                  "$containerIndex": 2
                                                }
                                              ],
                                              "$container": "[Circular]",
                                              "$containerProperty": "terminal"
                                            },
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 44
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 5
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "items",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 6
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 7
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "[",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 8
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "items",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "NavItem",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "NavItem",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Keyword",
                                                "value": "{",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "title",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "title",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "STRING",
                                                    "ref": "[Circular]"
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "icon",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "IconProperty",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "IconProperty",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "icon",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "icon",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "STRING",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 46
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 4
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "screen",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 5
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 6
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "screen",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "CrossReference",
                                                  "type": {
                                                    "$refText": "Screen",
                                                    "ref": "[Circular]"
                                                  },
                                                  "terminal": {
                                                    "$type": "RuleCall",
                                                    "rule": {
                                                      "$refText": "ID",
                                                      "ref": "[Circular]"
                                                    },
                                                    "arguments": [],
                                                    "$container": "[Circular]",
                                                    "$containerProperty": "terminal"
                                                  },
                                                  "deprecatedSyntax": false,
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 7
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "}",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 8
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 45
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 9
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Keyword",
                                        "value": ",",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 0
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "items",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "NavItem",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 1
                                      }
                                    ],
                                    "cardinality": "*",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 10
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "]",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 11
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "}",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 12
                                  }
                                ],
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "definesHiddenTokens": false,
                              "entry": false,
                              "fragment": false,
                              "hiddenTokens": [],
                              "parameters": [],
                              "wildcard": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 43
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 17
                      },
                      {
                        "$type": "Assignment",
                        "feature": "api",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "API",
                            "ref": {
                              "$type": "ParserRule",
                              "name": "API",
                              "definition": {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Keyword",
                                    "value": "api",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 0
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 1
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "{",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 2
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "baseUrl",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 3
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 4
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "baseUrl",
                                    "operator": "=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "STRING",
                                        "ref": "[Circular]"
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 5
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "isMock",
                                    "operator": "?=",
                                    "terminal": {
                                      "$type": "Keyword",
                                      "value": "mock",
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "cardinality": "?",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 6
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "endpoints",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 7
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 8
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "[",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 9
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "endpoints",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "Endpoint",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "Endpoint",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Keyword",
                                                "value": "{",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "id",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "id",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ID",
                                                    "ref": "[Circular]"
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "path",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 4
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 5
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "path",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "STRING",
                                                    "ref": "[Circular]"
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 6
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "method",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 7
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 8
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "method",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "HTTPMethod",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "HTTPMethod",
                                                      "definition": {
                                                        "$type": "Assignment",
                                                        "feature": "method",
                                                        "operator": "=",
                                                        "terminal": {
                                                          "$type": "Alternatives",
                                                          "elements": [
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "GET",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 0
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "POST",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 1
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "PUT",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 2
                                                            },
                                                            {
                                                              "$type": "Keyword",
                                                              "value": "DELETE",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "elements",
                                                              "$containerIndex": 3
                                                            }
                                                          ],
                                                          "$container": "[Circular]",
                                                          "$containerProperty": "terminal"
                                                        },
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 49
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 9
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "params",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "APIParams",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "APIParams",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "params",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "[",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "parameters",
                                                            "operator": "+=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "APIParameter",
                                                                "ref": {
                                                                  "$type": "ParserRule",
                                                                  "name": "APIParameter",
                                                                  "definition": {
                                                                    "$type": "Group",
                                                                    "elements": [
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "{",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 0
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "name",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 1
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 2
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "name",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "ID",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 3
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "type",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 4
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 5
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "type",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "DataType",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 6
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "isRequired",
                                                                        "operator": "?=",
                                                                        "terminal": {
                                                                          "$type": "Keyword",
                                                                          "value": "required",
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "cardinality": "?",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 7
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": "}",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 8
                                                                      }
                                                                    ],
                                                                    "$container": "[Circular]",
                                                                    "$containerProperty": "definition"
                                                                  },
                                                                  "definesHiddenTokens": false,
                                                                  "entry": false,
                                                                  "fragment": false,
                                                                  "hiddenTokens": [],
                                                                  "parameters": [],
                                                                  "wildcard": false,
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "rules",
                                                                  "$containerIndex": 51
                                                                }
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 3
                                                          },
                                                          {
                                                            "$type": "Group",
                                                            "elements": [
                                                              {
                                                                "$type": "Keyword",
                                                                "value": ",",
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 0
                                                              },
                                                              {
                                                                "$type": "Assignment",
                                                                "feature": "parameters",
                                                                "operator": "+=",
                                                                "terminal": {
                                                                  "$type": "RuleCall",
                                                                  "rule": {
                                                                    "$refText": "APIParameter",
                                                                    "ref": "[Circular]"
                                                                  },
                                                                  "arguments": [],
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "terminal"
                                                                },
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "elements",
                                                                "$containerIndex": 1
                                                              }
                                                            ],
                                                            "cardinality": "*",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 4
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "]",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 5
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 50
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 10
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "body",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "APIBody",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "APIBody",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "body",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": ":",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "modelRef",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "CrossReference",
                                                              "type": {
                                                                "$refText": "Model",
                                                                "ref": "[Circular]"
                                                              },
                                                              "terminal": {
                                                                "$type": "RuleCall",
                                                                "rule": {
                                                                  "$refText": "ID",
                                                                  "ref": "[Circular]"
                                                                },
                                                                "arguments": [],
                                                                "$container": "[Circular]",
                                                                "$containerProperty": "terminal"
                                                              },
                                                              "deprecatedSyntax": false,
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 52
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "cardinality": "?",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 11
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "response",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 12
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 13
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "response",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ResponseTypeRef",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "ResponseTypeRef",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "type",
                                                            "operator": "=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "ID",
                                                                "ref": "[Circular]"
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "isArray",
                                                            "operator": "?=",
                                                            "terminal": {
                                                              "$type": "Keyword",
                                                              "value": "[]",
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "cardinality": "?",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 53
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 14
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "}",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 15
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 48
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 10
                                  },
                                  {
                                    "$type": "Group",
                                    "elements": [
                                      {
                                        "$type": "Keyword",
                                        "value": ",",
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 0
                                      },
                                      {
                                        "$type": "Assignment",
                                        "feature": "endpoints",
                                        "operator": "+=",
                                        "terminal": {
                                          "$type": "RuleCall",
                                          "rule": {
                                            "$refText": "Endpoint",
                                            "ref": "[Circular]"
                                          },
                                          "arguments": [],
                                          "$container": "[Circular]",
                                          "$containerProperty": "terminal"
                                        },
                                        "$container": "[Circular]",
                                        "$containerProperty": "elements",
                                        "$containerIndex": 1
                                      }
                                    ],
                                    "cardinality": "*",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 11
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "]",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 12
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "}",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 13
                                  }
                                ],
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "definesHiddenTokens": false,
                              "entry": false,
                              "fragment": false,
                              "hiddenTokens": [],
                              "parameters": [],
                              "wildcard": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 47
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 18
                      },
                      {
                        "$type": "Assignment",
                        "feature": "mockData",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$refText": "MockData",
                            "ref": {
                              "$type": "ParserRule",
                              "name": "MockData",
                              "definition": {
                                "$type": "Group",
                                "elements": [
                                  {
                                    "$type": "Keyword",
                                    "value": "mockData",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 0
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": ":",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 1
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "{",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 2
                                  },
                                  {
                                    "$type": "Assignment",
                                    "feature": "sections",
                                    "operator": "+=",
                                    "terminal": {
                                      "$type": "RuleCall",
                                      "rule": {
                                        "$refText": "MockDataSection",
                                        "ref": {
                                          "$type": "ParserRule",
                                          "name": "MockDataSection",
                                          "definition": {
                                            "$type": "Group",
                                            "elements": [
                                              {
                                                "$type": "Assignment",
                                                "feature": "name",
                                                "operator": "=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "ID",
                                                    "ref": "[Circular]"
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 0
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": ":",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 1
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "[",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 2
                                              },
                                              {
                                                "$type": "Assignment",
                                                "feature": "items",
                                                "operator": "+=",
                                                "terminal": {
                                                  "$type": "RuleCall",
                                                  "rule": {
                                                    "$refText": "MockDataItem",
                                                    "ref": {
                                                      "$type": "ParserRule",
                                                      "name": "MockDataItem",
                                                      "definition": {
                                                        "$type": "Group",
                                                        "elements": [
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "{",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 0
                                                          },
                                                          {
                                                            "$type": "Assignment",
                                                            "feature": "properties",
                                                            "operator": "+=",
                                                            "terminal": {
                                                              "$type": "RuleCall",
                                                              "rule": {
                                                                "$refText": "MockProperty",
                                                                "ref": {
                                                                  "$type": "ParserRule",
                                                                  "name": "MockProperty",
                                                                  "definition": {
                                                                    "$type": "Group",
                                                                    "elements": [
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "name",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "ID",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 0
                                                                      },
                                                                      {
                                                                        "$type": "Keyword",
                                                                        "value": ":",
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 1
                                                                      },
                                                                      {
                                                                        "$type": "Assignment",
                                                                        "feature": "value",
                                                                        "operator": "=",
                                                                        "terminal": {
                                                                          "$type": "RuleCall",
                                                                          "rule": {
                                                                            "$refText": "Value",
                                                                            "ref": "[Circular]"
                                                                          },
                                                                          "arguments": [],
                                                                          "$container": "[Circular]",
                                                                          "$containerProperty": "terminal"
                                                                        },
                                                                        "$container": "[Circular]",
                                                                        "$containerProperty": "elements",
                                                                        "$containerIndex": 2
                                                                      }
                                                                    ],
                                                                    "$container": "[Circular]",
                                                                    "$containerProperty": "definition"
                                                                  },
                                                                  "definesHiddenTokens": false,
                                                                  "entry": false,
                                                                  "fragment": false,
                                                                  "hiddenTokens": [],
                                                                  "parameters": [],
                                                                  "wildcard": false,
                                                                  "$container": "[Circular]",
                                                                  "$containerProperty": "rules",
                                                                  "$containerIndex": 57
                                                                }
                                                              },
                                                              "arguments": [],
                                                              "$container": "[Circular]",
                                                              "$containerProperty": "terminal"
                                                            },
                                                            "cardinality": "*",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 1
                                                          },
                                                          {
                                                            "$type": "Keyword",
                                                            "value": "}",
                                                            "$container": "[Circular]",
                                                            "$containerProperty": "elements",
                                                            "$containerIndex": 2
                                                          }
                                                        ],
                                                        "$container": "[Circular]",
                                                        "$containerProperty": "definition"
                                                      },
                                                      "definesHiddenTokens": false,
                                                      "entry": false,
                                                      "fragment": false,
                                                      "hiddenTokens": [],
                                                      "parameters": [],
                                                      "wildcard": false,
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "rules",
                                                      "$containerIndex": 56
                                                    }
                                                  },
                                                  "arguments": [],
                                                  "$container": "[Circular]",
                                                  "$containerProperty": "terminal"
                                                },
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 3
                                              },
                                              {
                                                "$type": "Group",
                                                "elements": [
                                                  {
                                                    "$type": "Keyword",
                                                    "value": ",",
                                                    "$container": "[Circular]",
                                                    "$containerProperty": "elements",
                                                    "$containerIndex": 0
                                                  },
                                                  {
                                                    "$type": "Assignment",
                                                    "feature": "items",
                                                    "operator": "+=",
                                                    "terminal": {
                                                      "$type": "RuleCall",
                                                      "rule": {
                                                        "$refText": "MockDataItem",
                                                        "ref": "[Circular]"
                                                      },
                                                      "arguments": [],
                                                      "$container": "[Circular]",
                                                      "$containerProperty": "terminal"
                                                    },
                                                    "$container": "[Circular]",
                                                    "$containerProperty": "elements",
                                                    "$containerIndex": 1
                                                  }
                                                ],
                                                "cardinality": "*",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 4
                                              },
                                              {
                                                "$type": "Keyword",
                                                "value": "]",
                                                "$container": "[Circular]",
                                                "$containerProperty": "elements",
                                                "$containerIndex": 5
                                              }
                                            ],
                                            "$container": "[Circular]",
                                            "$containerProperty": "definition"
                                          },
                                          "definesHiddenTokens": false,
                                          "entry": false,
                                          "fragment": false,
                                          "hiddenTokens": [],
                                          "parameters": [],
                                          "wildcard": false,
                                          "$container": "[Circular]",
                                          "$containerProperty": "rules",
                                          "$containerIndex": 55
                                        }
                                      },
                                      "arguments": [],
                                      "$container": "[Circular]",
                                      "$containerProperty": "terminal"
                                    },
                                    "cardinality": "*",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 3
                                  },
                                  {
                                    "$type": "Keyword",
                                    "value": "}",
                                    "$container": "[Circular]",
                                    "$containerProperty": "elements",
                                    "$containerIndex": 4
                                  }
                                ],
                                "$container": "[Circular]",
                                "$containerProperty": "definition"
                              },
                              "definesHiddenTokens": false,
                              "entry": false,
                              "fragment": false,
                              "hiddenTokens": [],
                              "parameters": [],
                              "wildcard": false,
                              "$container": "[Circular]",
                              "$containerProperty": "rules",
                              "$containerIndex": 54
                            }
                          },
                          "arguments": [],
                          "$container": "[Circular]",
                          "$containerProperty": "terminal"
                        },
                        "cardinality": "?",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 19
                      }
                    ],
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "definesHiddenTokens": false,
                  "fragment": false,
                  "hiddenTokens": [],
                  "parameters": [],
                  "wildcard": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 0
                },
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                {
                  "$type": "ParserRule",
                  "name": "FQN",
                  "dataType": "string",
                  "definition": {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$refText": "ID",
                          "ref": "[Circular]"
                        },
                        "arguments": [],
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 0
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": ".",
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 0
                          },
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$refText": "ID",
                              "ref": "[Circular]"
                            },
                            "arguments": [],
                            "$container": "[Circular]",
                            "$containerProperty": "elements",
                            "$containerIndex": 1
                          }
                        ],
                        "cardinality": "*",
                        "$container": "[Circular]",
                        "$containerProperty": "elements",
                        "$containerIndex": 1
                      }
                    ],
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "definesHiddenTokens": false,
                  "entry": false,
                  "fragment": false,
                  "hiddenTokens": [],
                  "parameters": [],
                  "wildcard": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 28
                },
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                "[Circular]",
                {
                  "$type": "TerminalRule",
                  "name": "ML_COMMENT",
                  "definition": {
                    "$type": "RegexToken",
                    "regex": "/\\/\\*[\\s\\S]*?\\*\\//",
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "fragment": false,
                  "hidden": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 61
                },
                {
                  "$type": "TerminalRule",
                  "name": "SL_COMMENT",
                  "definition": {
                    "$type": "RegexToken",
                    "regex": "/\\/\\/[^\\n\\r]*/",
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "fragment": false,
                  "hidden": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 62
                },
                {
                  "$type": "TerminalRule",
                  "name": "WS",
                  "definition": {
                    "$type": "RegexToken",
                    "regex": "/\\s+/",
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "fragment": false,
                  "hidden": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 63
                },
                {
                  "$type": "TerminalRule",
                  "name": "ANY_OTHER",
                  "definition": {
                    "$type": "RegexToken",
                    "regex": "/./",
                    "$container": "[Circular]",
                    "$containerProperty": "definition"
                  },
                  "fragment": false,
                  "hidden": false,
                  "$container": "[Circular]",
                  "$containerProperty": "rules",
                  "$containerIndex": 64
                }
              ],
              "definesHiddenTokens": false,
              "hiddenTokens": [],
              "imports": [],
              "interfaces": [],
              "types": [],
              "usedGrammars": [],
              "$document": {
                "parseResult": {
                  "value": "[Circular]",
                  "parserErrors": [],
                  "lexerErrors": []
                },
                "uri": {
                  "$mid": 1,
                  "scheme": "memory",
                  "authority": "FinanceAppDSL.langium"
                },
                "state": 1,
                "references": [],
                "textDocument": {
                  "_uri": "memory://financeappdsl.langium",
                  "_languageId": "langium",
                  "_version": 0,
                  "_content": ""
                }
              }
            },
            "$containerProperty": "rules",
            "$containerIndex": 58
          }
        },
        "arguments": [],
        "$container": "[Circular]",
        "$containerProperty": "terminal"
      },
      "root": "[Circular]",
      "container": "[Circular]"
    }
  ],
  "_text": "// finance-app.finapp - Example DSL file for a personal finance app\n\napp FinanceTracker {\n    name: \"Personal Finance Tracker\"\n    id: \"com.example.financetracker\"\n    version: \"1.0.0\"\n    platforms: [ios, android, web]\n    theme: {\n        primaryColor: \"#007AFF\"\n        secondaryColor: \"#5AC8FA\"\n        backgroundColor: \"#F2F2F7\"\n        textColor: \"#000000\"\n    }\n}\n\n// Data models\nmodel Account {\n    id: string required\n    name: string required\n    balance: decimal required\n    type: string required enum: [checking, savings, credit, investment]\n    currency: string default: \"USD\"\n    isActive: boolean default: true\n    lastUpdated: date\n}\n\nmodel Transaction {\n    id: string required\n    accountId: string required\n    amount: decimal required\n    description: string required\n    date: date required\n    category: string\n    isIncome: boolean default: false\n    notes: string\n    tags: string[]\n}\n\nmodel Category {\n    id: string required\n    name: string required\n    color: string\n    icon: string\n    isSystem: boolean default: false\n}\n\n// Screens\nscreen AccountSummary {\n    title: \"Accounts\"\n    initial\n    \n    layout: {\n        type: stack\n        components: [\n            {\n                type: header\n                title: \"Your Accounts\"\n            },\n            {\n                type: accountSummaryCard\n                data: totalBalance\n                properties: {\n                    title: \"Total Balance\",\n                    showCurrency: true\n                }\n            },\n            {\n                type: divider\n            },\n            {\n                type: list\n                data: accounts\n                properties: {\n                    itemType: \"accountCard\",\n                    showBalance: true\n                }\n                actions: {\n                    onTap: {\n                        navigate: AccountDetail\n                        params: {\n                            accountId: \"item.id\"\n                        }\n                    }\n                }\n            },\n            {\n                type: button\n                text: \"Add Account\"\n                properties: {\n                    style: \"primary\",\n                    fullWidth: true\n                }\n                actions: {\n                    onTap: {\n                        navigate: AddAccount\n                    }\n                }\n            }\n        ]\n    }\n}\n\nscreen AccountDetail {\n    title: \"Account Details\"\n    params: {\n        accountId: string required\n    }\n    \n    layout: {\n        type: stack\n        components: [\n            {\n                type: header\n                title: \"{{account.name}}\"\n                subtitle: \"{{account.type}}\"\n            },\n            {\n                type: balanceCard\n                data: account.balance\n                properties: {\n                    showCurrency: true,\n                    showChange: true\n                }\n            },\n            {\n                type: tabs\n                items: [\n                    {\n                        type: text\n                        title: \"Transactions\"\n                        properties: {\n                            data: transactions,\n                            itemType: \"transactionItem\",\n                            showDate: true,\n                            showCategory: true\n                        }\n                        actions: {\n                            onTap: {\n                                navigate: TransactionDetail\n                                params: {\n                                    transactionId: \"item.id\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        type: chart\n                        title: \"Statistics\"\n                        properties: {\n                            chartType: \"pie\",\n                            data: \"transactionsByCategory\"\n                        }\n                    }\n                ]\n            },\n            {\n                type: button\n                text: \"Add Transaction\"\n                properties: {\n                    style: \"primary\"\n                }\n                actions: {\n                    onTap: {\n                        navigate: AddTransaction\n                        params: {\n                            accountId: \"account.id\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}\n\nscreen AddTransaction {\n    title: \"Add Transaction\"\n    params: {\n        accountId: string required\n    }\n    \n    layout: {\n        type: form\n        submitButton: \"Save\"\n        cancelButton: \"Cancel\"\n        actions: {\n            onSubmit: {\n                api: createTransaction\n                navigate: AccountDetail\n                params: {\n                    accountId: \"params.accountId\"\n                }\n            },\n            onCancel: {\n                navigate: AccountDetail\n                params: {\n                    accountId: \"params.accountId\"\n                }\n            }\n        }\n        fields: [\n            {\n                type: text\n                name: description\n                label: \"Description\"\n                required\n            },\n            {\n                type: number\n                name: amount\n                label: \"Amount\"\n                required\n                properties: {\n                    decimalPlaces: 2,\n                    currency: true\n                }\n            },\n            {\n                type: toggle\n                name: isIncome\n                label: \"Is Income\"\n            },\n            {\n                type: select\n                name: category\n                label: \"Category\"\n                options: {\n                    data: categories\n                    labelField: \"name\"\n                    valueField: \"id\"\n                }\n            },\n            {\n                type: datePicker\n                name: date\n                label: \"Date\"\n            }\n        ]\n    }\n}\n\n// App navigation\nnavigation: {\n    type: tab\n    items: [\n        {\n            title: \"Accounts\"\n            icon: \"wallet\"\n            screen: AccountSummary\n        },\n        {\n            title: \"Transactions\"\n            icon: \"list\"\n            screen: AccountDetail\n        },\n        {\n            title: \"Budget\"\n            icon: \"chart\"\n            screen: AccountSummary  // Placeholder until we have a Budget screen\n        },\n        {\n            title: \"Settings\"\n            icon: \"gear\"\n            screen: AccountSummary  // Placeholder until we have a Settings screen\n        }\n    ]\n}\n\n// API configuration\napi: {\n    baseUrl: \"https://api.example.com/v1\"\n    mock\n    endpoints: [\n        {\n            id: getAccounts\n            path: \"/accounts\"\n            method: GET\n            response: Account[]\n        },\n        {\n            id: getAccount\n            path: \"/accounts/{accountId}\"\n            method: GET\n            params: [\n                {\n                    name: accountId\n                    type: string\n                    required\n                }\n            ]\n            response: Account\n        },\n        {\n            id: getTransactions\n            path: \"/accounts/{accountId}/transactions\"\n            method: GET\n            params: [\n                {\n                    name: accountId\n                    type: string\n                    required\n                },\n                {\n                    name: startDate\n                    type: date\n                },\n                {\n                    name: endDate\n                    type: date\n                }\n            ]\n            response: Transaction[]\n        },\n        {\n            id: createTransaction\n            path: \"/transactions\"\n            method: POST\n            body: Transaction\n            response: Transaction\n        }\n    ]\n}\n\n// Mock data for development\nmockData: {\n    accounts: [\n        {\n            id: \"acc1\"\n            name: \"Main Checking\"\n            balance: 2540.50\n            type: \"checking\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-20\"\n        },\n        {\n            id: \"acc2\"\n            name: \"Savings\"\n            balance: 12750.75\n            type: \"savings\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-19\"\n        },\n        {\n            id: \"acc3\"\n            name: \"Credit Card\"\n            balance: -450.25\n            type: \"credit\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-18\"\n        }\n    ],\n    \n    transactions: [\n        {\n            id: \"t1\"\n            accountId: \"acc1\"\n            amount: -45.50\n            description: \"Grocery Store\"\n            date: \"2025-03-18\"\n            category: \"Food\"\n            isIncome: false\n        },\n        {\n            id: \"t2\"\n            accountId: \"acc1\"\n            amount: 1250.00\n            description: \"Salary\"\n            date: \"2025-03-15\"\n            category: \"Income\"\n            isIncome: true\n        },\n        {\n            id: \"t3\"\n            accountId: \"acc1\"\n            amount: -75.00\n            description: \"Electric Bill\"\n            date: \"2025-03-10\"\n            category: \"Utilities\"\n            isIncome: false\n        }\n    ],\n    \n    categories: [\n        {\n            id: \"cat1\"\n            name: \"Food\"\n            color: \"#FF9500\"\n            icon: \"restaurant\"\n        },\n        {\n            id: \"cat2\"\n            name: \"Transport\"\n            color: \"#5AC8FA\"\n            icon: \"car\"\n        },\n        {\n            id: \"cat3\"\n            name: \"Utilities\"\n            color: \"#FFCC00\"\n            icon: \"bolt\"\n        },\n        {\n            id: \"cat4\"\n            name: \"Entertainment\"\n            color: \"#FF2D55\"\n            icon: \"film\"\n        },\n        {\n            id: \"cat5\"\n            name: \"Income\"\n            color: \"#4CD964\"\n            icon: \"wallet\"\n        }\n    ]\n}",
  "root": "[Circular]",
  "_astNode": {
    "$type": "App",
    "name": "finance",
    "$cstNode": "[Circular]",
    "models": [],
    "platforms": [],
    "screens": [],
    "$document": {
      "parseResult": {
        "value": "[Circular]",
        "lexerErrors": [
          {
            "offset": 0,
            "line": 1,
            "column": 1,
            "length": 3,
            "message": "unexpected character: ->/<- at offset: 0, skipped 3 characters."
          },
          {
            "offset": 10,
            "line": 1,
            "column": 11,
            "length": 1,
            "message": "unexpected character: ->-<- at offset: 10, skipped 1 characters."
          },
          {
            "offset": 21,
            "line": 1,
            "column": 22,
            "length": 3,
            "message": "unexpected character: -> <- at offset: 21, skipped 3 characters."
          },
          {
            "offset": 31,
            "line": 1,
            "column": 32,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 31, skipped 1 characters."
          },
          {
            "offset": 35,
            "line": 1,
            "column": 36,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 35, skipped 1 characters."
          },
          {
            "offset": 40,
            "line": 1,
            "column": 41,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 40, skipped 1 characters."
          },
          {
            "offset": 44,
            "line": 1,
            "column": 45,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 44, skipped 1 characters."
          },
          {
            "offset": 46,
            "line": 1,
            "column": 47,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 46, skipped 1 characters."
          },
          {
            "offset": 55,
            "line": 1,
            "column": 56,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 55, skipped 1 characters."
          },
          {
            "offset": 63,
            "line": 1,
            "column": 64,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 63, skipped 1 characters."
          },
          {
            "offset": 67,
            "line": 1,
            "column": 68,
            "length": 2,
            "message": "unexpected character: ->\n<- at offset: 67, skipped 2 characters."
          },
          {
            "offset": 72,
            "line": 1,
            "column": 73,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 72, skipped 1 characters."
          },
          {
            "offset": 87,
            "line": 1,
            "column": 88,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 87, skipped 1 characters."
          },
          {
            "offset": 89,
            "line": 1,
            "column": 90,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 89, skipped 5 characters."
          },
          {
            "offset": 99,
            "line": 1,
            "column": 100,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 99, skipped 1 characters."
          },
          {
            "offset": 126,
            "line": 1,
            "column": 127,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 126, skipped 5 characters."
          },
          {
            "offset": 134,
            "line": 1,
            "column": 135,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 134, skipped 1 characters."
          },
          {
            "offset": 163,
            "line": 1,
            "column": 164,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 163, skipped 5 characters."
          },
          {
            "offset": 176,
            "line": 1,
            "column": 177,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 176, skipped 1 characters."
          },
          {
            "offset": 184,
            "line": 1,
            "column": 185,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 184, skipped 5 characters."
          },
          {
            "offset": 199,
            "line": 1,
            "column": 200,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 199, skipped 1 characters."
          },
          {
            "offset": 205,
            "line": 1,
            "column": 206,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 205, skipped 1 characters."
          },
          {
            "offset": 214,
            "line": 1,
            "column": 215,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 214, skipped 1 characters."
          },
          {
            "offset": 219,
            "line": 1,
            "column": 220,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 219, skipped 5 characters."
          },
          {
            "offset": 230,
            "line": 1,
            "column": 231,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 230, skipped 1 characters."
          },
          {
            "offset": 232,
            "line": 1,
            "column": 233,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 232, skipped 9 characters."
          },
          {
            "offset": 254,
            "line": 1,
            "column": 255,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 254, skipped 1 characters."
          },
          {
            "offset": 264,
            "line": 1,
            "column": 265,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 264, skipped 9 characters."
          },
          {
            "offset": 288,
            "line": 1,
            "column": 289,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 288, skipped 1 characters."
          },
          {
            "offset": 298,
            "line": 1,
            "column": 299,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 298, skipped 9 characters."
          },
          {
            "offset": 323,
            "line": 1,
            "column": 324,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 323, skipped 1 characters."
          },
          {
            "offset": 333,
            "line": 1,
            "column": 334,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 333, skipped 9 characters."
          },
          {
            "offset": 352,
            "line": 1,
            "column": 353,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 352, skipped 1 characters."
          },
          {
            "offset": 362,
            "line": 1,
            "column": 363,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 362, skipped 5 characters."
          },
          {
            "offset": 368,
            "line": 1,
            "column": 369,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 368, skipped 1 characters."
          },
          {
            "offset": 370,
            "line": 1,
            "column": 371,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 370, skipped 5 characters."
          },
          {
            "offset": 379,
            "line": 1,
            "column": 380,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 379, skipped 1 characters."
          },
          {
            "offset": 386,
            "line": 1,
            "column": 387,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 386, skipped 1 characters."
          },
          {
            "offset": 392,
            "line": 1,
            "column": 393,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 392, skipped 1 characters."
          },
          {
            "offset": 400,
            "line": 1,
            "column": 401,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 400, skipped 1 characters."
          },
          {
            "offset": 402,
            "line": 1,
            "column": 403,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 402, skipped 5 characters."
          },
          {
            "offset": 410,
            "line": 1,
            "column": 411,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 410, skipped 1 characters."
          },
          {
            "offset": 417,
            "line": 1,
            "column": 418,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 417, skipped 1 characters."
          },
          {
            "offset": 426,
            "line": 1,
            "column": 427,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 426, skipped 5 characters."
          },
          {
            "offset": 436,
            "line": 1,
            "column": 437,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 436, skipped 1 characters."
          },
          {
            "offset": 443,
            "line": 1,
            "column": 444,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 443, skipped 1 characters."
          },
          {
            "offset": 452,
            "line": 1,
            "column": 453,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 452, skipped 5 characters."
          },
          {
            "offset": 465,
            "line": 1,
            "column": 466,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 465, skipped 1 characters."
          },
          {
            "offset": 473,
            "line": 1,
            "column": 474,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 473, skipped 1 characters."
          },
          {
            "offset": 482,
            "line": 1,
            "column": 483,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 482, skipped 5 characters."
          },
          {
            "offset": 492,
            "line": 1,
            "column": 493,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 492, skipped 1 characters."
          },
          {
            "offset": 499,
            "line": 1,
            "column": 500,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 499, skipped 1 characters."
          },
          {
            "offset": 508,
            "line": 1,
            "column": 509,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 508, skipped 1 characters."
          },
          {
            "offset": 514,
            "line": 1,
            "column": 515,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 514, skipped 1 characters."
          },
          {
            "offset": 525,
            "line": 1,
            "column": 526,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 525, skipped 1 characters."
          },
          {
            "offset": 534,
            "line": 1,
            "column": 535,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 534, skipped 1 characters."
          },
          {
            "offset": 542,
            "line": 1,
            "column": 543,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 542, skipped 1 characters."
          },
          {
            "offset": 554,
            "line": 1,
            "column": 555,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 554, skipped 5 characters."
          },
          {
            "offset": 568,
            "line": 1,
            "column": 569,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 568, skipped 1 characters."
          },
          {
            "offset": 575,
            "line": 1,
            "column": 576,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 575, skipped 1 characters."
          },
          {
            "offset": 584,
            "line": 1,
            "column": 585,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 584, skipped 1 characters."
          },
          {
            "offset": 590,
            "line": 1,
            "column": 591,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 590, skipped 5 characters."
          },
          {
            "offset": 604,
            "line": 1,
            "column": 605,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 604, skipped 1 characters."
          },
          {
            "offset": 612,
            "line": 1,
            "column": 613,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 612, skipped 1 characters."
          },
          {
            "offset": 621,
            "line": 1,
            "column": 622,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 621, skipped 1 characters."
          },
          {
            "offset": 626,
            "line": 1,
            "column": 627,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 626, skipped 5 characters."
          },
          {
            "offset": 643,
            "line": 1,
            "column": 644,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 643, skipped 1 characters."
          },
          {
            "offset": 648,
            "line": 1,
            "column": 649,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 648, skipped 1 characters."
          },
          {
            "offset": 650,
            "line": 1,
            "column": 651,
            "length": 2,
            "message": "unexpected character: ->\n<- at offset: 650, skipped 2 characters."
          },
          {
            "offset": 657,
            "line": 1,
            "column": 658,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 657, skipped 1 characters."
          },
          {
            "offset": 669,
            "line": 1,
            "column": 670,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 669, skipped 1 characters."
          },
          {
            "offset": 671,
            "line": 1,
            "column": 672,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 671, skipped 5 characters."
          },
          {
            "offset": 679,
            "line": 1,
            "column": 680,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 679, skipped 1 characters."
          },
          {
            "offset": 686,
            "line": 1,
            "column": 687,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 686, skipped 1 characters."
          },
          {
            "offset": 695,
            "line": 1,
            "column": 696,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 695, skipped 5 characters."
          },
          {
            "offset": 710,
            "line": 1,
            "column": 711,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 710, skipped 1 characters."
          },
          {
            "offset": 717,
            "line": 1,
            "column": 718,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 717, skipped 1 characters."
          },
          {
            "offset": 726,
            "line": 1,
            "column": 727,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 726, skipped 5 characters."
          },
          {
            "offset": 738,
            "line": 1,
            "column": 739,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 738, skipped 1 characters."
          },
          {
            "offset": 746,
            "line": 1,
            "column": 747,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 746, skipped 1 characters."
          },
          {
            "offset": 755,
            "line": 1,
            "column": 756,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 755, skipped 5 characters."
          },
          {
            "offset": 772,
            "line": 1,
            "column": 773,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 772, skipped 1 characters."
          },
          {
            "offset": 779,
            "line": 1,
            "column": 780,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 779, skipped 1 characters."
          },
          {
            "offset": 788,
            "line": 1,
            "column": 789,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 788, skipped 5 characters."
          },
          {
            "offset": 798,
            "line": 1,
            "column": 799,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 798, skipped 1 characters."
          },
          {
            "offset": 803,
            "line": 1,
            "column": 804,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 803, skipped 1 characters."
          },
          {
            "offset": 812,
            "line": 1,
            "column": 813,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 812, skipped 5 characters."
          },
          {
            "offset": 826,
            "line": 1,
            "column": 827,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 826, skipped 1 characters."
          },
          {
            "offset": 833,
            "line": 1,
            "column": 834,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 833, skipped 5 characters."
          },
          {
            "offset": 847,
            "line": 1,
            "column": 848,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 847, skipped 1 characters."
          },
          {
            "offset": 855,
            "line": 1,
            "column": 856,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 855, skipped 1 characters."
          },
          {
            "offset": 864,
            "line": 1,
            "column": 865,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 864, skipped 1 characters."
          },
          {
            "offset": 870,
            "line": 1,
            "column": 871,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 870, skipped 5 characters."
          },
          {
            "offset": 881,
            "line": 1,
            "column": 882,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 881, skipped 1 characters."
          },
          {
            "offset": 888,
            "line": 1,
            "column": 889,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 888, skipped 5 characters."
          },
          {
            "offset": 898,
            "line": 1,
            "column": 899,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 898, skipped 1 characters."
          },
          {
            "offset": 907,
            "line": 1,
            "column": 908,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 907, skipped 1 characters."
          },
          {
            "offset": 909,
            "line": 1,
            "column": 910,
            "length": 2,
            "message": "unexpected character: ->\n<- at offset: 909, skipped 2 characters."
          },
          {
            "offset": 916,
            "line": 1,
            "column": 917,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 916, skipped 1 characters."
          },
          {
            "offset": 925,
            "line": 1,
            "column": 926,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 925, skipped 1 characters."
          },
          {
            "offset": 927,
            "line": 1,
            "column": 928,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 927, skipped 5 characters."
          },
          {
            "offset": 935,
            "line": 1,
            "column": 936,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 935, skipped 1 characters."
          },
          {
            "offset": 942,
            "line": 1,
            "column": 943,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 942, skipped 1 characters."
          },
          {
            "offset": 951,
            "line": 1,
            "column": 952,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 951, skipped 5 characters."
          },
          {
            "offset": 961,
            "line": 1,
            "column": 962,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 961, skipped 1 characters."
          },
          {
            "offset": 968,
            "line": 1,
            "column": 969,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 968, skipped 1 characters."
          },
          {
            "offset": 977,
            "line": 1,
            "column": 978,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 977, skipped 5 characters."
          },
          {
            "offset": 988,
            "line": 1,
            "column": 989,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 988, skipped 1 characters."
          },
          {
            "offset": 995,
            "line": 1,
            "column": 996,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 995, skipped 5 characters."
          },
          {
            "offset": 1005,
            "line": 1,
            "column": 1006,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1005, skipped 1 characters."
          },
          {
            "offset": 1012,
            "line": 1,
            "column": 1013,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 1012, skipped 5 characters."
          },
          {
            "offset": 1026,
            "line": 1,
            "column": 1027,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1026, skipped 1 characters."
          },
          {
            "offset": 1034,
            "line": 1,
            "column": 1035,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1034, skipped 1 characters."
          },
          {
            "offset": 1043,
            "line": 1,
            "column": 1044,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1043, skipped 1 characters."
          },
          {
            "offset": 1049,
            "line": 1,
            "column": 1050,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 1049, skipped 1 characters."
          },
          {
            "offset": 1051,
            "line": 1,
            "column": 1052,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 1051, skipped 5 characters."
          },
          {
            "offset": 1063,
            "line": 1,
            "column": 1064,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 1063, skipped 1 characters."
          },
          {
            "offset": 1070,
            "line": 1,
            "column": 1071,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1070, skipped 1 characters."
          },
          {
            "offset": 1085,
            "line": 1,
            "column": 1086,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1085, skipped 1 characters."
          },
          {
            "offset": 1087,
            "line": 1,
            "column": 1088,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 1087, skipped 5 characters."
          },
          {
            "offset": 1098,
            "line": 1,
            "column": 1099,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1098, skipped 1 characters."
          },
          {
            "offset": 1109,
            "line": 1,
            "column": 1110,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 1109, skipped 5 characters."
          },
          {
            "offset": 1121,
            "line": 1,
            "column": 1122,
            "length": 10,
            "message": "unexpected character: ->\n<- at offset: 1121, skipped 10 characters."
          },
          {
            "offset": 1138,
            "line": 1,
            "column": 1139,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1138, skipped 1 characters."
          },
          {
            "offset": 1140,
            "line": 1,
            "column": 1141,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 1140, skipped 9 characters."
          },
          {
            "offset": 1154,
            "line": 1,
            "column": 1155,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1154, skipped 1 characters."
          },
          {
            "offset": 1160,
            "line": 1,
            "column": 1161,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 1160, skipped 9 characters."
          },
          {
            "offset": 1180,
            "line": 1,
            "column": 1181,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1180, skipped 1 characters."
          },
          {
            "offset": 1182,
            "line": 1,
            "column": 1183,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1182, skipped 13 characters."
          },
          {
            "offset": 1196,
            "line": 1,
            "column": 1197,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1196, skipped 17 characters."
          },
          {
            "offset": 1218,
            "line": 1,
            "column": 1219,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1218, skipped 1 characters."
          },
          {
            "offset": 1225,
            "line": 1,
            "column": 1226,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1225, skipped 17 characters."
          },
          {
            "offset": 1248,
            "line": 1,
            "column": 1249,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1248, skipped 1 characters."
          },
          {
            "offset": 1264,
            "line": 1,
            "column": 1265,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1264, skipped 13 characters."
          },
          {
            "offset": 1279,
            "line": 1,
            "column": 1280,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1279, skipped 13 characters."
          },
          {
            "offset": 1293,
            "line": 1,
            "column": 1294,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1293, skipped 17 characters."
          },
          {
            "offset": 1315,
            "line": 1,
            "column": 1316,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1315, skipped 1 characters."
          },
          {
            "offset": 1334,
            "line": 1,
            "column": 1335,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1334, skipped 17 characters."
          },
          {
            "offset": 1356,
            "line": 1,
            "column": 1357,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1356, skipped 1 characters."
          },
          {
            "offset": 1369,
            "line": 1,
            "column": 1370,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1369, skipped 17 characters."
          },
          {
            "offset": 1397,
            "line": 1,
            "column": 1398,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1397, skipped 1 characters."
          },
          {
            "offset": 1399,
            "line": 1,
            "column": 1400,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1399, skipped 21 characters."
          },
          {
            "offset": 1426,
            "line": 1,
            "column": 1427,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1426, skipped 1 characters."
          },
          {
            "offset": 1443,
            "line": 1,
            "column": 1444,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1443, skipped 21 characters."
          },
          {
            "offset": 1477,
            "line": 1,
            "column": 1478,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1477, skipped 1 characters."
          },
          {
            "offset": 1482,
            "line": 1,
            "column": 1483,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1482, skipped 17 characters."
          },
          {
            "offset": 1500,
            "line": 1,
            "column": 1501,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1500, skipped 13 characters."
          },
          {
            "offset": 1515,
            "line": 1,
            "column": 1516,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1515, skipped 13 characters."
          },
          {
            "offset": 1529,
            "line": 1,
            "column": 1530,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1529, skipped 17 characters."
          },
          {
            "offset": 1551,
            "line": 1,
            "column": 1552,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1551, skipped 1 characters."
          },
          {
            "offset": 1559,
            "line": 1,
            "column": 1560,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1559, skipped 13 characters."
          },
          {
            "offset": 1574,
            "line": 1,
            "column": 1575,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 1574, skipped 13 characters."
          },
          {
            "offset": 1588,
            "line": 1,
            "column": 1589,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1588, skipped 17 characters."
          },
          {
            "offset": 1610,
            "line": 1,
            "column": 1611,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1610, skipped 1 characters."
          },
          {
            "offset": 1615,
            "line": 1,
            "column": 1616,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1615, skipped 17 characters."
          },
          {
            "offset": 1637,
            "line": 1,
            "column": 1638,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1637, skipped 1 characters."
          },
          {
            "offset": 1646,
            "line": 1,
            "column": 1647,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1646, skipped 17 characters."
          },
          {
            "offset": 1674,
            "line": 1,
            "column": 1675,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1674, skipped 1 characters."
          },
          {
            "offset": 1676,
            "line": 1,
            "column": 1677,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1676, skipped 21 characters."
          },
          {
            "offset": 1706,
            "line": 1,
            "column": 1707,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1706, skipped 1 characters."
          },
          {
            "offset": 1721,
            "line": 1,
            "column": 1722,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1721, skipped 21 characters."
          },
          {
            "offset": 1754,
            "line": 1,
            "column": 1755,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1754, skipped 1 characters."
          },
          {
            "offset": 1759,
            "line": 1,
            "column": 1760,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1759, skipped 17 characters."
          },
          {
            "offset": 1777,
            "line": 1,
            "column": 1778,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 1777, skipped 17 characters."
          },
          {
            "offset": 1802,
            "line": 1,
            "column": 1803,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1802, skipped 1 characters."
          },
          {
            "offset": 1804,
            "line": 1,
            "column": 1805,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1804, skipped 21 characters."
          },
          {
            "offset": 1831,
            "line": 1,
            "column": 1832,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1831, skipped 1 characters."
          },
          {
            "offset": 1833,
            "line": 1,
            "column": 1834,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 1833, skipped 25 characters."
          },
          {
            "offset": 1867,
            "line": 1,
            "column": 1868,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1867, skipped 1 characters."
          },
          {
            "offset": 1881,
            "line": 1,
            "column": 1882,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 1881, skipped 25 characters."
          },
          {
            "offset": 1913,
            "line": 1,
            "column": 1914,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1913, skipped 1 characters."
          },
          {
            "offset": 1915,
            "line": 1,
            "column": 1916,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 1915, skipped 29 characters."
          },
          {
            "offset": 1954,
            "line": 1,
            "column": 1955,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 1954, skipped 1 characters."
          },
          {
            "offset": 1964,
            "line": 1,
            "column": 1965,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 1964, skipped 25 characters."
          },
          {
            "offset": 1990,
            "line": 1,
            "column": 1991,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 1990, skipped 21 characters."
          },
          {
            "offset": 2012,
            "line": 1,
            "column": 2013,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2012, skipped 17 characters."
          },
          {
            "offset": 2030,
            "line": 1,
            "column": 2031,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2030, skipped 13 characters."
          },
          {
            "offset": 2045,
            "line": 1,
            "column": 2046,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2045, skipped 13 characters."
          },
          {
            "offset": 2059,
            "line": 1,
            "column": 2060,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2059, skipped 17 characters."
          },
          {
            "offset": 2081,
            "line": 1,
            "column": 2082,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2081, skipped 1 characters."
          },
          {
            "offset": 2088,
            "line": 1,
            "column": 2089,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2088, skipped 17 characters."
          },
          {
            "offset": 2110,
            "line": 1,
            "column": 2111,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2110, skipped 1 characters."
          },
          {
            "offset": 2124,
            "line": 1,
            "column": 2125,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2124, skipped 17 characters."
          },
          {
            "offset": 2152,
            "line": 1,
            "column": 2153,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2152, skipped 1 characters."
          },
          {
            "offset": 2154,
            "line": 1,
            "column": 2155,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2154, skipped 21 characters."
          },
          {
            "offset": 2181,
            "line": 1,
            "column": 2182,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2181, skipped 1 characters."
          },
          {
            "offset": 2192,
            "line": 1,
            "column": 2193,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2192, skipped 21 characters."
          },
          {
            "offset": 2223,
            "line": 1,
            "column": 2224,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2223, skipped 1 characters."
          },
          {
            "offset": 2228,
            "line": 1,
            "column": 2229,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2228, skipped 17 characters."
          },
          {
            "offset": 2246,
            "line": 1,
            "column": 2247,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2246, skipped 17 characters."
          },
          {
            "offset": 2271,
            "line": 1,
            "column": 2272,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2271, skipped 1 characters."
          },
          {
            "offset": 2273,
            "line": 1,
            "column": 2274,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2273, skipped 21 characters."
          },
          {
            "offset": 2300,
            "line": 1,
            "column": 2301,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2300, skipped 1 characters."
          },
          {
            "offset": 2302,
            "line": 1,
            "column": 2303,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 2302, skipped 25 characters."
          },
          {
            "offset": 2336,
            "line": 1,
            "column": 2337,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2336, skipped 1 characters."
          },
          {
            "offset": 2347,
            "line": 1,
            "column": 2348,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2347, skipped 21 characters."
          },
          {
            "offset": 2369,
            "line": 1,
            "column": 2370,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2369, skipped 17 characters."
          },
          {
            "offset": 2387,
            "line": 1,
            "column": 2388,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2387, skipped 13 characters."
          },
          {
            "offset": 2401,
            "line": 1,
            "column": 2402,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 2401, skipped 9 characters."
          },
          {
            "offset": 2411,
            "line": 1,
            "column": 2412,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 2411, skipped 5 characters."
          },
          {
            "offset": 2417,
            "line": 1,
            "column": 2418,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 2417, skipped 1 characters."
          },
          {
            "offset": 2419,
            "line": 1,
            "column": 2420,
            "length": 2,
            "message": "unexpected character: ->\n<- at offset: 2419, skipped 2 characters."
          },
          {
            "offset": 2427,
            "line": 1,
            "column": 2428,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2427, skipped 1 characters."
          },
          {
            "offset": 2441,
            "line": 1,
            "column": 2442,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2441, skipped 1 characters."
          },
          {
            "offset": 2443,
            "line": 1,
            "column": 2444,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 2443, skipped 5 characters."
          },
          {
            "offset": 2454,
            "line": 1,
            "column": 2455,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2454, skipped 1 characters."
          },
          {
            "offset": 2472,
            "line": 1,
            "column": 2473,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 2472, skipped 5 characters."
          },
          {
            "offset": 2484,
            "line": 1,
            "column": 2485,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2484, skipped 1 characters."
          },
          {
            "offset": 2486,
            "line": 1,
            "column": 2487,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 2486, skipped 9 characters."
          },
          {
            "offset": 2505,
            "line": 1,
            "column": 2506,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2505, skipped 1 characters."
          },
          {
            "offset": 2512,
            "line": 1,
            "column": 2513,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2512, skipped 1 characters."
          },
          {
            "offset": 2521,
            "line": 1,
            "column": 2522,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 2521, skipped 5 characters."
          },
          {
            "offset": 2527,
            "line": 1,
            "column": 2528,
            "length": 10,
            "message": "unexpected character: ->\n<- at offset: 2527, skipped 10 characters."
          },
          {
            "offset": 2544,
            "line": 1,
            "column": 2545,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2544, skipped 1 characters."
          },
          {
            "offset": 2546,
            "line": 1,
            "column": 2547,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 2546, skipped 9 characters."
          },
          {
            "offset": 2560,
            "line": 1,
            "column": 2561,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2560, skipped 1 characters."
          },
          {
            "offset": 2566,
            "line": 1,
            "column": 2567,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 2566, skipped 9 characters."
          },
          {
            "offset": 2586,
            "line": 1,
            "column": 2587,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2586, skipped 1 characters."
          },
          {
            "offset": 2588,
            "line": 1,
            "column": 2589,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2588, skipped 13 characters."
          },
          {
            "offset": 2602,
            "line": 1,
            "column": 2603,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2602, skipped 17 characters."
          },
          {
            "offset": 2624,
            "line": 1,
            "column": 2625,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2624, skipped 1 characters."
          },
          {
            "offset": 2631,
            "line": 1,
            "column": 2632,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2631, skipped 17 characters."
          },
          {
            "offset": 2654,
            "line": 1,
            "column": 2655,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2654, skipped 1 characters."
          },
          {
            "offset": 2673,
            "line": 1,
            "column": 2674,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2673, skipped 17 characters."
          },
          {
            "offset": 2699,
            "line": 1,
            "column": 2700,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2699, skipped 1 characters."
          },
          {
            "offset": 2718,
            "line": 1,
            "column": 2719,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2718, skipped 13 characters."
          },
          {
            "offset": 2733,
            "line": 1,
            "column": 2734,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2733, skipped 13 characters."
          },
          {
            "offset": 2747,
            "line": 1,
            "column": 2748,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2747, skipped 17 characters."
          },
          {
            "offset": 2769,
            "line": 1,
            "column": 2770,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2769, skipped 1 characters."
          },
          {
            "offset": 2781,
            "line": 1,
            "column": 2782,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2781, skipped 17 characters."
          },
          {
            "offset": 2803,
            "line": 1,
            "column": 2804,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2803, skipped 1 characters."
          },
          {
            "offset": 2819,
            "line": 1,
            "column": 2820,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2819, skipped 17 characters."
          },
          {
            "offset": 2847,
            "line": 1,
            "column": 2848,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2847, skipped 1 characters."
          },
          {
            "offset": 2849,
            "line": 1,
            "column": 2850,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2849, skipped 21 characters."
          },
          {
            "offset": 2883,
            "line": 1,
            "column": 2884,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2883, skipped 1 characters."
          },
          {
            "offset": 2889,
            "line": 1,
            "column": 2890,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 2889, skipped 21 characters."
          },
          {
            "offset": 2921,
            "line": 1,
            "column": 2922,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2921, skipped 1 characters."
          },
          {
            "offset": 2926,
            "line": 1,
            "column": 2927,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2926, skipped 17 characters."
          },
          {
            "offset": 2944,
            "line": 1,
            "column": 2945,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2944, skipped 13 characters."
          },
          {
            "offset": 2959,
            "line": 1,
            "column": 2960,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 2959, skipped 13 characters."
          },
          {
            "offset": 2973,
            "line": 1,
            "column": 2974,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 2973, skipped 17 characters."
          },
          {
            "offset": 2995,
            "line": 1,
            "column": 2996,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 2995, skipped 1 characters."
          },
          {
            "offset": 3000,
            "line": 1,
            "column": 3001,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 3000, skipped 17 characters."
          },
          {
            "offset": 3023,
            "line": 1,
            "column": 3024,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3023, skipped 1 characters."
          },
          {
            "offset": 3025,
            "line": 1,
            "column": 3026,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 3025, skipped 21 characters."
          },
          {
            "offset": 3047,
            "line": 1,
            "column": 3048,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3047, skipped 25 characters."
          },
          {
            "offset": 3077,
            "line": 1,
            "column": 3078,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3077, skipped 1 characters."
          },
          {
            "offset": 3082,
            "line": 1,
            "column": 3083,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3082, skipped 25 characters."
          },
          {
            "offset": 3113,
            "line": 1,
            "column": 3114,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3113, skipped 1 characters."
          },
          {
            "offset": 3128,
            "line": 1,
            "column": 3129,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3128, skipped 25 characters."
          },
          {
            "offset": 3164,
            "line": 1,
            "column": 3165,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3164, skipped 1 characters."
          },
          {
            "offset": 3166,
            "line": 1,
            "column": 3167,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3166, skipped 29 characters."
          },
          {
            "offset": 3200,
            "line": 1,
            "column": 3201,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3200, skipped 1 characters."
          },
          {
            "offset": 3214,
            "line": 1,
            "column": 3215,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3214, skipped 29 characters."
          },
          {
            "offset": 3252,
            "line": 1,
            "column": 3253,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3252, skipped 1 characters."
          },
          {
            "offset": 3271,
            "line": 1,
            "column": 3272,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3271, skipped 29 characters."
          },
          {
            "offset": 3309,
            "line": 1,
            "column": 3310,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3309, skipped 1 characters."
          },
          {
            "offset": 3315,
            "line": 1,
            "column": 3316,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3315, skipped 29 characters."
          },
          {
            "offset": 3357,
            "line": 1,
            "column": 3358,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3357, skipped 1 characters."
          },
          {
            "offset": 3362,
            "line": 1,
            "column": 3363,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3362, skipped 25 characters."
          },
          {
            "offset": 3388,
            "line": 1,
            "column": 3389,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3388, skipped 25 characters."
          },
          {
            "offset": 3421,
            "line": 1,
            "column": 3422,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3421, skipped 1 characters."
          },
          {
            "offset": 3423,
            "line": 1,
            "column": 3424,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3423, skipped 29 characters."
          },
          {
            "offset": 3458,
            "line": 1,
            "column": 3459,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3458, skipped 1 characters."
          },
          {
            "offset": 3460,
            "line": 1,
            "column": 3461,
            "length": 33,
            "message": "unexpected character: ->\n<- at offset: 3460, skipped 33 characters."
          },
          {
            "offset": 3502,
            "line": 1,
            "column": 3503,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3502, skipped 1 characters."
          },
          {
            "offset": 3520,
            "line": 1,
            "column": 3521,
            "length": 33,
            "message": "unexpected character: ->\n<- at offset: 3520, skipped 33 characters."
          },
          {
            "offset": 3560,
            "line": 1,
            "column": 3561,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3560, skipped 1 characters."
          },
          {
            "offset": 3562,
            "line": 1,
            "column": 3563,
            "length": 37,
            "message": "unexpected character: ->\n<- at offset: 3562, skipped 37 characters."
          },
          {
            "offset": 3613,
            "line": 1,
            "column": 3614,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3613, skipped 1 characters."
          },
          {
            "offset": 3623,
            "line": 1,
            "column": 3624,
            "length": 33,
            "message": "unexpected character: ->\n<- at offset: 3623, skipped 33 characters."
          },
          {
            "offset": 3657,
            "line": 1,
            "column": 3658,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3657, skipped 29 characters."
          },
          {
            "offset": 3687,
            "line": 1,
            "column": 3688,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3687, skipped 25 characters."
          },
          {
            "offset": 3713,
            "line": 1,
            "column": 3714,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 3713, skipped 21 characters."
          },
          {
            "offset": 3736,
            "line": 1,
            "column": 3737,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 3736, skipped 21 characters."
          },
          {
            "offset": 3758,
            "line": 1,
            "column": 3759,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3758, skipped 25 characters."
          },
          {
            "offset": 3788,
            "line": 1,
            "column": 3789,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3788, skipped 1 characters."
          },
          {
            "offset": 3794,
            "line": 1,
            "column": 3795,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3794, skipped 25 characters."
          },
          {
            "offset": 3825,
            "line": 1,
            "column": 3826,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3825, skipped 1 characters."
          },
          {
            "offset": 3838,
            "line": 1,
            "column": 3839,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3838, skipped 25 characters."
          },
          {
            "offset": 3874,
            "line": 1,
            "column": 3875,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3874, skipped 1 characters."
          },
          {
            "offset": 3876,
            "line": 1,
            "column": 3877,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3876, skipped 29 characters."
          },
          {
            "offset": 3915,
            "line": 1,
            "column": 3916,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3915, skipped 1 characters."
          },
          {
            "offset": 3922,
            "line": 1,
            "column": 3923,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 3922, skipped 29 characters."
          },
          {
            "offset": 3956,
            "line": 1,
            "column": 3957,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 3956, skipped 1 characters."
          },
          {
            "offset": 3981,
            "line": 1,
            "column": 3982,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 3981, skipped 25 characters."
          },
          {
            "offset": 4007,
            "line": 1,
            "column": 4008,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 4007, skipped 21 characters."
          },
          {
            "offset": 4029,
            "line": 1,
            "column": 4030,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4029, skipped 17 characters."
          },
          {
            "offset": 4047,
            "line": 1,
            "column": 4048,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4047, skipped 13 characters."
          },
          {
            "offset": 4062,
            "line": 1,
            "column": 4063,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4062, skipped 13 characters."
          },
          {
            "offset": 4076,
            "line": 1,
            "column": 4077,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4076, skipped 17 characters."
          },
          {
            "offset": 4098,
            "line": 1,
            "column": 4099,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4098, skipped 1 characters."
          },
          {
            "offset": 4105,
            "line": 1,
            "column": 4106,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4105, skipped 17 characters."
          },
          {
            "offset": 4127,
            "line": 1,
            "column": 4128,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4127, skipped 1 characters."
          },
          {
            "offset": 4145,
            "line": 1,
            "column": 4146,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4145, skipped 17 characters."
          },
          {
            "offset": 4173,
            "line": 1,
            "column": 4174,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4173, skipped 1 characters."
          },
          {
            "offset": 4175,
            "line": 1,
            "column": 4176,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 4175, skipped 21 characters."
          },
          {
            "offset": 4202,
            "line": 1,
            "column": 4203,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4202, skipped 1 characters."
          },
          {
            "offset": 4212,
            "line": 1,
            "column": 4213,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4212, skipped 17 characters."
          },
          {
            "offset": 4230,
            "line": 1,
            "column": 4231,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4230, skipped 17 characters."
          },
          {
            "offset": 4255,
            "line": 1,
            "column": 4256,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4255, skipped 1 characters."
          },
          {
            "offset": 4257,
            "line": 1,
            "column": 4258,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 4257, skipped 21 characters."
          },
          {
            "offset": 4284,
            "line": 1,
            "column": 4285,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4284, skipped 1 characters."
          },
          {
            "offset": 4286,
            "line": 1,
            "column": 4287,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 4286, skipped 25 characters."
          },
          {
            "offset": 4320,
            "line": 1,
            "column": 4321,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4320, skipped 1 characters."
          },
          {
            "offset": 4335,
            "line": 1,
            "column": 4336,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 4335, skipped 25 characters."
          },
          {
            "offset": 4367,
            "line": 1,
            "column": 4368,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4367, skipped 1 characters."
          },
          {
            "offset": 4369,
            "line": 1,
            "column": 4370,
            "length": 29,
            "message": "unexpected character: ->\n<- at offset: 4369, skipped 29 characters."
          },
          {
            "offset": 4408,
            "line": 1,
            "column": 4409,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4408, skipped 1 characters."
          },
          {
            "offset": 4421,
            "line": 1,
            "column": 4422,
            "length": 25,
            "message": "unexpected character: ->\n<- at offset: 4421, skipped 25 characters."
          },
          {
            "offset": 4447,
            "line": 1,
            "column": 4448,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 4447, skipped 21 characters."
          },
          {
            "offset": 4469,
            "line": 1,
            "column": 4470,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4469, skipped 17 characters."
          },
          {
            "offset": 4487,
            "line": 1,
            "column": 4488,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4487, skipped 13 characters."
          },
          {
            "offset": 4501,
            "line": 1,
            "column": 4502,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4501, skipped 9 characters."
          },
          {
            "offset": 4511,
            "line": 1,
            "column": 4512,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 4511, skipped 5 characters."
          },
          {
            "offset": 4517,
            "line": 1,
            "column": 4518,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 4517, skipped 1 characters."
          },
          {
            "offset": 4519,
            "line": 1,
            "column": 4520,
            "length": 2,
            "message": "unexpected character: ->\n<- at offset: 4519, skipped 2 characters."
          },
          {
            "offset": 4527,
            "line": 1,
            "column": 4528,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4527, skipped 1 characters."
          },
          {
            "offset": 4542,
            "line": 1,
            "column": 4543,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4542, skipped 1 characters."
          },
          {
            "offset": 4544,
            "line": 1,
            "column": 4545,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 4544, skipped 5 characters."
          },
          {
            "offset": 4555,
            "line": 1,
            "column": 4556,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4555, skipped 1 characters."
          },
          {
            "offset": 4573,
            "line": 1,
            "column": 4574,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 4573, skipped 5 characters."
          },
          {
            "offset": 4585,
            "line": 1,
            "column": 4586,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4585, skipped 1 characters."
          },
          {
            "offset": 4587,
            "line": 1,
            "column": 4588,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4587, skipped 9 characters."
          },
          {
            "offset": 4606,
            "line": 1,
            "column": 4607,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4606, skipped 1 characters."
          },
          {
            "offset": 4613,
            "line": 1,
            "column": 4614,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4613, skipped 1 characters."
          },
          {
            "offset": 4622,
            "line": 1,
            "column": 4623,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 4622, skipped 5 characters."
          },
          {
            "offset": 4628,
            "line": 1,
            "column": 4629,
            "length": 10,
            "message": "unexpected character: ->\n<- at offset: 4628, skipped 10 characters."
          },
          {
            "offset": 4645,
            "line": 1,
            "column": 4646,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4645, skipped 1 characters."
          },
          {
            "offset": 4647,
            "line": 1,
            "column": 4648,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4647, skipped 9 characters."
          },
          {
            "offset": 4661,
            "line": 1,
            "column": 4662,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4661, skipped 1 characters."
          },
          {
            "offset": 4666,
            "line": 1,
            "column": 4667,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4666, skipped 9 characters."
          },
          {
            "offset": 4688,
            "line": 1,
            "column": 4689,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4688, skipped 1 characters."
          },
          {
            "offset": 4695,
            "line": 1,
            "column": 4696,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4695, skipped 9 characters."
          },
          {
            "offset": 4717,
            "line": 1,
            "column": 4718,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4717, skipped 1 characters."
          },
          {
            "offset": 4726,
            "line": 1,
            "column": 4727,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 4726, skipped 9 characters."
          },
          {
            "offset": 4743,
            "line": 1,
            "column": 4744,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4743, skipped 1 characters."
          },
          {
            "offset": 4745,
            "line": 1,
            "column": 4746,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4745, skipped 13 characters."
          },
          {
            "offset": 4767,
            "line": 1,
            "column": 4768,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4767, skipped 1 characters."
          },
          {
            "offset": 4769,
            "line": 1,
            "column": 4770,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4769, skipped 17 characters."
          },
          {
            "offset": 4790,
            "line": 1,
            "column": 4791,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4790, skipped 1 characters."
          },
          {
            "offset": 4808,
            "line": 1,
            "column": 4809,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4808, skipped 17 characters."
          },
          {
            "offset": 4834,
            "line": 1,
            "column": 4835,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4834, skipped 1 characters."
          },
          {
            "offset": 4848,
            "line": 1,
            "column": 4849,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4848, skipped 17 characters."
          },
          {
            "offset": 4872,
            "line": 1,
            "column": 4873,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4872, skipped 1 characters."
          },
          {
            "offset": 4874,
            "line": 1,
            "column": 4875,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 4874, skipped 21 characters."
          },
          {
            "offset": 4905,
            "line": 1,
            "column": 4906,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4905, skipped 1 characters."
          },
          {
            "offset": 4924,
            "line": 1,
            "column": 4925,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4924, skipped 17 characters."
          },
          {
            "offset": 4942,
            "line": 1,
            "column": 4943,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4942, skipped 13 characters."
          },
          {
            "offset": 4957,
            "line": 1,
            "column": 4958,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 4957, skipped 13 characters."
          },
          {
            "offset": 4979,
            "line": 1,
            "column": 4980,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 4979, skipped 1 characters."
          },
          {
            "offset": 4981,
            "line": 1,
            "column": 4982,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 4981, skipped 17 characters."
          },
          {
            "offset": 5007,
            "line": 1,
            "column": 5008,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5007, skipped 1 characters."
          },
          {
            "offset": 5021,
            "line": 1,
            "column": 5022,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5021, skipped 17 characters."
          },
          {
            "offset": 5045,
            "line": 1,
            "column": 5046,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5045, skipped 1 characters."
          },
          {
            "offset": 5047,
            "line": 1,
            "column": 5048,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5047, skipped 21 characters."
          },
          {
            "offset": 5078,
            "line": 1,
            "column": 5079,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5078, skipped 1 characters."
          },
          {
            "offset": 5097,
            "line": 1,
            "column": 5098,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5097, skipped 17 characters."
          },
          {
            "offset": 5115,
            "line": 1,
            "column": 5116,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5115, skipped 13 characters."
          },
          {
            "offset": 5129,
            "line": 1,
            "column": 5130,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 5129, skipped 9 characters."
          },
          {
            "offset": 5139,
            "line": 1,
            "column": 5140,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 5139, skipped 9 characters."
          },
          {
            "offset": 5155,
            "line": 1,
            "column": 5156,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5155, skipped 1 characters."
          },
          {
            "offset": 5157,
            "line": 1,
            "column": 5158,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5157, skipped 13 characters."
          },
          {
            "offset": 5171,
            "line": 1,
            "column": 5172,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5171, skipped 17 characters."
          },
          {
            "offset": 5193,
            "line": 1,
            "column": 5194,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5193, skipped 1 characters."
          },
          {
            "offset": 5198,
            "line": 1,
            "column": 5199,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5198, skipped 17 characters."
          },
          {
            "offset": 5220,
            "line": 1,
            "column": 5221,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5220, skipped 1 characters."
          },
          {
            "offset": 5232,
            "line": 1,
            "column": 5233,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5232, skipped 17 characters."
          },
          {
            "offset": 5255,
            "line": 1,
            "column": 5256,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5255, skipped 1 characters."
          },
          {
            "offset": 5269,
            "line": 1,
            "column": 5270,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5269, skipped 17 characters."
          },
          {
            "offset": 5294,
            "line": 1,
            "column": 5295,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5294, skipped 13 characters."
          },
          {
            "offset": 5309,
            "line": 1,
            "column": 5310,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5309, skipped 13 characters."
          },
          {
            "offset": 5323,
            "line": 1,
            "column": 5324,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5323, skipped 17 characters."
          },
          {
            "offset": 5345,
            "line": 1,
            "column": 5346,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5345, skipped 1 characters."
          },
          {
            "offset": 5352,
            "line": 1,
            "column": 5353,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5352, skipped 17 characters."
          },
          {
            "offset": 5374,
            "line": 1,
            "column": 5375,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5374, skipped 1 characters."
          },
          {
            "offset": 5381,
            "line": 1,
            "column": 5382,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5381, skipped 17 characters."
          },
          {
            "offset": 5404,
            "line": 1,
            "column": 5405,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5404, skipped 1 characters."
          },
          {
            "offset": 5413,
            "line": 1,
            "column": 5414,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5413, skipped 17 characters."
          },
          {
            "offset": 5438,
            "line": 1,
            "column": 5439,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5438, skipped 17 characters."
          },
          {
            "offset": 5466,
            "line": 1,
            "column": 5467,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5466, skipped 1 characters."
          },
          {
            "offset": 5468,
            "line": 1,
            "column": 5469,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5468, skipped 21 characters."
          },
          {
            "offset": 5503,
            "line": 1,
            "column": 5504,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5503, skipped 1 characters."
          },
          {
            "offset": 5506,
            "line": 1,
            "column": 5507,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5506, skipped 21 characters."
          },
          {
            "offset": 5536,
            "line": 1,
            "column": 5537,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5536, skipped 1 characters."
          },
          {
            "offset": 5541,
            "line": 1,
            "column": 5542,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5541, skipped 17 characters."
          },
          {
            "offset": 5559,
            "line": 1,
            "column": 5560,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5559, skipped 13 characters."
          },
          {
            "offset": 5574,
            "line": 1,
            "column": 5575,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5574, skipped 13 characters."
          },
          {
            "offset": 5588,
            "line": 1,
            "column": 5589,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5588, skipped 17 characters."
          },
          {
            "offset": 5610,
            "line": 1,
            "column": 5611,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5610, skipped 1 characters."
          },
          {
            "offset": 5617,
            "line": 1,
            "column": 5618,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5617, skipped 17 characters."
          },
          {
            "offset": 5639,
            "line": 1,
            "column": 5640,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5639, skipped 1 characters."
          },
          {
            "offset": 5648,
            "line": 1,
            "column": 5649,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5648, skipped 17 characters."
          },
          {
            "offset": 5671,
            "line": 1,
            "column": 5672,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5671, skipped 1 characters."
          },
          {
            "offset": 5683,
            "line": 1,
            "column": 5684,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5683, skipped 13 characters."
          },
          {
            "offset": 5698,
            "line": 1,
            "column": 5699,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5698, skipped 13 characters."
          },
          {
            "offset": 5712,
            "line": 1,
            "column": 5713,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5712, skipped 17 characters."
          },
          {
            "offset": 5734,
            "line": 1,
            "column": 5735,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5734, skipped 1 characters."
          },
          {
            "offset": 5741,
            "line": 1,
            "column": 5742,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5741, skipped 17 characters."
          },
          {
            "offset": 5763,
            "line": 1,
            "column": 5764,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5763, skipped 1 characters."
          },
          {
            "offset": 5772,
            "line": 1,
            "column": 5773,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5772, skipped 17 characters."
          },
          {
            "offset": 5795,
            "line": 1,
            "column": 5796,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5795, skipped 1 characters."
          },
          {
            "offset": 5806,
            "line": 1,
            "column": 5807,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5806, skipped 17 characters."
          },
          {
            "offset": 5831,
            "line": 1,
            "column": 5832,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5831, skipped 1 characters."
          },
          {
            "offset": 5833,
            "line": 1,
            "column": 5834,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5833, skipped 21 characters."
          },
          {
            "offset": 5859,
            "line": 1,
            "column": 5860,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5859, skipped 1 characters."
          },
          {
            "offset": 5870,
            "line": 1,
            "column": 5871,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5870, skipped 21 characters."
          },
          {
            "offset": 5902,
            "line": 1,
            "column": 5903,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5902, skipped 1 characters."
          },
          {
            "offset": 5909,
            "line": 1,
            "column": 5910,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 5909, skipped 21 characters."
          },
          {
            "offset": 5941,
            "line": 1,
            "column": 5942,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 5941, skipped 1 characters."
          },
          {
            "offset": 5946,
            "line": 1,
            "column": 5947,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5946, skipped 17 characters."
          },
          {
            "offset": 5964,
            "line": 1,
            "column": 5965,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5964, skipped 13 characters."
          },
          {
            "offset": 5979,
            "line": 1,
            "column": 5980,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 5979, skipped 13 characters."
          },
          {
            "offset": 5993,
            "line": 1,
            "column": 5994,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 5993, skipped 17 characters."
          },
          {
            "offset": 6015,
            "line": 1,
            "column": 6016,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6015, skipped 1 characters."
          },
          {
            "offset": 6026,
            "line": 1,
            "column": 6027,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 6026, skipped 17 characters."
          },
          {
            "offset": 6048,
            "line": 1,
            "column": 6049,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6048, skipped 1 characters."
          },
          {
            "offset": 6053,
            "line": 1,
            "column": 6054,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 6053, skipped 17 characters."
          },
          {
            "offset": 6076,
            "line": 1,
            "column": 6077,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6076, skipped 1 characters."
          },
          {
            "offset": 6083,
            "line": 1,
            "column": 6084,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6083, skipped 13 characters."
          },
          {
            "offset": 6097,
            "line": 1,
            "column": 6098,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6097, skipped 9 characters."
          },
          {
            "offset": 6107,
            "line": 1,
            "column": 6108,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6107, skipped 5 characters."
          },
          {
            "offset": 6113,
            "line": 1,
            "column": 6114,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 6113, skipped 1 characters."
          },
          {
            "offset": 6115,
            "line": 1,
            "column": 6116,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6115, skipped 5 characters."
          },
          {
            "offset": 6123,
            "line": 1,
            "column": 6124,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6123, skipped 1 characters."
          },
          {
            "offset": 6134,
            "line": 1,
            "column": 6135,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 6134, skipped 1 characters."
          },
          {
            "offset": 6146,
            "line": 1,
            "column": 6147,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6146, skipped 1 characters."
          },
          {
            "offset": 6148,
            "line": 1,
            "column": 6149,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6148, skipped 5 characters."
          },
          {
            "offset": 6158,
            "line": 1,
            "column": 6159,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6158, skipped 1 characters."
          },
          {
            "offset": 6162,
            "line": 1,
            "column": 6163,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6162, skipped 5 characters."
          },
          {
            "offset": 6173,
            "line": 1,
            "column": 6174,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6173, skipped 1 characters."
          },
          {
            "offset": 6175,
            "line": 1,
            "column": 6176,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6175, skipped 9 characters."
          },
          {
            "offset": 6185,
            "line": 1,
            "column": 6186,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6185, skipped 13 characters."
          },
          {
            "offset": 6204,
            "line": 1,
            "column": 6205,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6204, skipped 1 characters."
          },
          {
            "offset": 6215,
            "line": 1,
            "column": 6216,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6215, skipped 13 characters."
          },
          {
            "offset": 6233,
            "line": 1,
            "column": 6234,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6233, skipped 1 characters."
          },
          {
            "offset": 6242,
            "line": 1,
            "column": 6243,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6242, skipped 13 characters."
          },
          {
            "offset": 6262,
            "line": 1,
            "column": 6263,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6262, skipped 1 characters."
          },
          {
            "offset": 6277,
            "line": 1,
            "column": 6278,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6277, skipped 9 characters."
          },
          {
            "offset": 6288,
            "line": 1,
            "column": 6289,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6288, skipped 9 characters."
          },
          {
            "offset": 6298,
            "line": 1,
            "column": 6299,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6298, skipped 13 characters."
          },
          {
            "offset": 6317,
            "line": 1,
            "column": 6318,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6317, skipped 1 characters."
          },
          {
            "offset": 6332,
            "line": 1,
            "column": 6333,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6332, skipped 13 characters."
          },
          {
            "offset": 6350,
            "line": 1,
            "column": 6351,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6350, skipped 1 characters."
          },
          {
            "offset": 6357,
            "line": 1,
            "column": 6358,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6357, skipped 13 characters."
          },
          {
            "offset": 6377,
            "line": 1,
            "column": 6378,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6377, skipped 1 characters."
          },
          {
            "offset": 6391,
            "line": 1,
            "column": 6392,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6391, skipped 9 characters."
          },
          {
            "offset": 6402,
            "line": 1,
            "column": 6403,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6402, skipped 9 characters."
          },
          {
            "offset": 6412,
            "line": 1,
            "column": 6413,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6412, skipped 13 characters."
          },
          {
            "offset": 6431,
            "line": 1,
            "column": 6432,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6431, skipped 1 characters."
          },
          {
            "offset": 6440,
            "line": 1,
            "column": 6441,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6440, skipped 13 characters."
          },
          {
            "offset": 6458,
            "line": 1,
            "column": 6459,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6458, skipped 1 characters."
          },
          {
            "offset": 6466,
            "line": 1,
            "column": 6467,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6466, skipped 13 characters."
          },
          {
            "offset": 6486,
            "line": 1,
            "column": 6487,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6486, skipped 1 characters."
          },
          {
            "offset": 6501,
            "line": 1,
            "column": 6502,
            "length": 5,
            "message": "unexpected character: -> <- at offset: 6501, skipped 5 characters."
          },
          {
            "offset": 6517,
            "line": 1,
            "column": 6518,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6517, skipped 1 characters."
          },
          {
            "offset": 6523,
            "line": 1,
            "column": 6524,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6523, skipped 1 characters."
          },
          {
            "offset": 6526,
            "line": 1,
            "column": 6527,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6526, skipped 1 characters."
          },
          {
            "offset": 6531,
            "line": 1,
            "column": 6532,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6531, skipped 1 characters."
          },
          {
            "offset": 6533,
            "line": 1,
            "column": 6534,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6533, skipped 1 characters."
          },
          {
            "offset": 6540,
            "line": 1,
            "column": 6541,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6540, skipped 1 characters."
          },
          {
            "offset": 6547,
            "line": 1,
            "column": 6548,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6547, skipped 9 characters."
          },
          {
            "offset": 6558,
            "line": 1,
            "column": 6559,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6558, skipped 9 characters."
          },
          {
            "offset": 6568,
            "line": 1,
            "column": 6569,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6568, skipped 13 characters."
          },
          {
            "offset": 6587,
            "line": 1,
            "column": 6588,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6587, skipped 1 characters."
          },
          {
            "offset": 6598,
            "line": 1,
            "column": 6599,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6598, skipped 13 characters."
          },
          {
            "offset": 6616,
            "line": 1,
            "column": 6617,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6616, skipped 1 characters."
          },
          {
            "offset": 6623,
            "line": 1,
            "column": 6624,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6623, skipped 13 characters."
          },
          {
            "offset": 6643,
            "line": 1,
            "column": 6644,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6643, skipped 1 characters."
          },
          {
            "offset": 6658,
            "line": 1,
            "column": 6659,
            "length": 5,
            "message": "unexpected character: -> <- at offset: 6658, skipped 5 characters."
          },
          {
            "offset": 6674,
            "line": 1,
            "column": 6675,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6674, skipped 1 characters."
          },
          {
            "offset": 6680,
            "line": 1,
            "column": 6681,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6680, skipped 1 characters."
          },
          {
            "offset": 6683,
            "line": 1,
            "column": 6684,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6683, skipped 1 characters."
          },
          {
            "offset": 6688,
            "line": 1,
            "column": 6689,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6688, skipped 1 characters."
          },
          {
            "offset": 6690,
            "line": 1,
            "column": 6691,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6690, skipped 1 characters."
          },
          {
            "offset": 6699,
            "line": 1,
            "column": 6700,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6699, skipped 1 characters."
          },
          {
            "offset": 6706,
            "line": 1,
            "column": 6707,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6706, skipped 9 characters."
          },
          {
            "offset": 6716,
            "line": 1,
            "column": 6717,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6716, skipped 5 characters."
          },
          {
            "offset": 6722,
            "line": 1,
            "column": 6723,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 6722, skipped 1 characters."
          },
          {
            "offset": 6724,
            "line": 1,
            "column": 6725,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6724, skipped 5 characters."
          },
          {
            "offset": 6732,
            "line": 1,
            "column": 6733,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6732, skipped 1 characters."
          },
          {
            "offset": 6746,
            "line": 1,
            "column": 6747,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 6746, skipped 1 characters."
          },
          {
            "offset": 6751,
            "line": 1,
            "column": 6752,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6751, skipped 1 characters."
          },
          {
            "offset": 6753,
            "line": 1,
            "column": 6754,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6753, skipped 5 characters."
          },
          {
            "offset": 6766,
            "line": 1,
            "column": 6767,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6766, skipped 1 characters."
          },
          {
            "offset": 6795,
            "line": 1,
            "column": 6796,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6795, skipped 5 characters."
          },
          {
            "offset": 6804,
            "line": 1,
            "column": 6805,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 6804, skipped 5 characters."
          },
          {
            "offset": 6819,
            "line": 1,
            "column": 6820,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6819, skipped 1 characters."
          },
          {
            "offset": 6821,
            "line": 1,
            "column": 6822,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6821, skipped 9 characters."
          },
          {
            "offset": 6831,
            "line": 1,
            "column": 6832,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6831, skipped 13 characters."
          },
          {
            "offset": 6847,
            "line": 1,
            "column": 6848,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6847, skipped 1 characters."
          },
          {
            "offset": 6859,
            "line": 1,
            "column": 6860,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6859, skipped 13 characters."
          },
          {
            "offset": 6877,
            "line": 1,
            "column": 6878,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6877, skipped 1 characters."
          },
          {
            "offset": 6889,
            "line": 1,
            "column": 6890,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6889, skipped 13 characters."
          },
          {
            "offset": 6909,
            "line": 1,
            "column": 6910,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6909, skipped 1 characters."
          },
          {
            "offset": 6913,
            "line": 1,
            "column": 6914,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6913, skipped 13 characters."
          },
          {
            "offset": 6935,
            "line": 1,
            "column": 6936,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6935, skipped 1 characters."
          },
          {
            "offset": 6945,
            "line": 1,
            "column": 6946,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6945, skipped 9 characters."
          },
          {
            "offset": 6956,
            "line": 1,
            "column": 6957,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 6956, skipped 9 characters."
          },
          {
            "offset": 6966,
            "line": 1,
            "column": 6967,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6966, skipped 13 characters."
          },
          {
            "offset": 6982,
            "line": 1,
            "column": 6983,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 6982, skipped 1 characters."
          },
          {
            "offset": 6993,
            "line": 1,
            "column": 6994,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 6993, skipped 13 characters."
          },
          {
            "offset": 7011,
            "line": 1,
            "column": 7012,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7011, skipped 1 characters."
          },
          {
            "offset": 7035,
            "line": 1,
            "column": 7036,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7035, skipped 13 characters."
          },
          {
            "offset": 7055,
            "line": 1,
            "column": 7056,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7055, skipped 1 characters."
          },
          {
            "offset": 7059,
            "line": 1,
            "column": 7060,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7059, skipped 13 characters."
          },
          {
            "offset": 7079,
            "line": 1,
            "column": 7080,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7079, skipped 1 characters."
          },
          {
            "offset": 7081,
            "line": 1,
            "column": 7082,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7081, skipped 17 characters."
          },
          {
            "offset": 7099,
            "line": 1,
            "column": 7100,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7099, skipped 21 characters."
          },
          {
            "offset": 7125,
            "line": 1,
            "column": 7126,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7125, skipped 1 characters."
          },
          {
            "offset": 7135,
            "line": 1,
            "column": 7136,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7135, skipped 21 characters."
          },
          {
            "offset": 7161,
            "line": 1,
            "column": 7162,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7161, skipped 1 characters."
          },
          {
            "offset": 7168,
            "line": 1,
            "column": 7169,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7168, skipped 21 characters."
          },
          {
            "offset": 7197,
            "line": 1,
            "column": 7198,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7197, skipped 17 characters."
          },
          {
            "offset": 7215,
            "line": 1,
            "column": 7216,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7215, skipped 13 characters."
          },
          {
            "offset": 7229,
            "line": 1,
            "column": 7230,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7229, skipped 13 characters."
          },
          {
            "offset": 7251,
            "line": 1,
            "column": 7252,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7251, skipped 1 characters."
          },
          {
            "offset": 7259,
            "line": 1,
            "column": 7260,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 7259, skipped 9 characters."
          },
          {
            "offset": 7270,
            "line": 1,
            "column": 7271,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 7270, skipped 9 characters."
          },
          {
            "offset": 7280,
            "line": 1,
            "column": 7281,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7280, skipped 13 characters."
          },
          {
            "offset": 7296,
            "line": 1,
            "column": 7297,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7296, skipped 1 characters."
          },
          {
            "offset": 7312,
            "line": 1,
            "column": 7313,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7312, skipped 13 characters."
          },
          {
            "offset": 7330,
            "line": 1,
            "column": 7331,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7330, skipped 1 characters."
          },
          {
            "offset": 7367,
            "line": 1,
            "column": 7368,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7367, skipped 13 characters."
          },
          {
            "offset": 7387,
            "line": 1,
            "column": 7388,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7387, skipped 1 characters."
          },
          {
            "offset": 7391,
            "line": 1,
            "column": 7392,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7391, skipped 13 characters."
          },
          {
            "offset": 7411,
            "line": 1,
            "column": 7412,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7411, skipped 1 characters."
          },
          {
            "offset": 7413,
            "line": 1,
            "column": 7414,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7413, skipped 17 characters."
          },
          {
            "offset": 7431,
            "line": 1,
            "column": 7432,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7431, skipped 21 characters."
          },
          {
            "offset": 7457,
            "line": 1,
            "column": 7458,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7457, skipped 1 characters."
          },
          {
            "offset": 7467,
            "line": 1,
            "column": 7468,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7467, skipped 21 characters."
          },
          {
            "offset": 7493,
            "line": 1,
            "column": 7494,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7493, skipped 1 characters."
          },
          {
            "offset": 7500,
            "line": 1,
            "column": 7501,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7500, skipped 21 characters."
          },
          {
            "offset": 7529,
            "line": 1,
            "column": 7530,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7529, skipped 17 characters."
          },
          {
            "offset": 7548,
            "line": 1,
            "column": 7549,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7548, skipped 17 characters."
          },
          {
            "offset": 7566,
            "line": 1,
            "column": 7567,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7566, skipped 21 characters."
          },
          {
            "offset": 7592,
            "line": 1,
            "column": 7593,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7592, skipped 1 characters."
          },
          {
            "offset": 7602,
            "line": 1,
            "column": 7603,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7602, skipped 21 characters."
          },
          {
            "offset": 7628,
            "line": 1,
            "column": 7629,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7628, skipped 1 characters."
          },
          {
            "offset": 7633,
            "line": 1,
            "column": 7634,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7633, skipped 17 characters."
          },
          {
            "offset": 7652,
            "line": 1,
            "column": 7653,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7652, skipped 17 characters."
          },
          {
            "offset": 7670,
            "line": 1,
            "column": 7671,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7670, skipped 21 characters."
          },
          {
            "offset": 7696,
            "line": 1,
            "column": 7697,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7696, skipped 1 characters."
          },
          {
            "offset": 7704,
            "line": 1,
            "column": 7705,
            "length": 21,
            "message": "unexpected character: ->\n<- at offset: 7704, skipped 21 characters."
          },
          {
            "offset": 7730,
            "line": 1,
            "column": 7731,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7730, skipped 1 characters."
          },
          {
            "offset": 7735,
            "line": 1,
            "column": 7736,
            "length": 17,
            "message": "unexpected character: ->\n<- at offset: 7735, skipped 17 characters."
          },
          {
            "offset": 7753,
            "line": 1,
            "column": 7754,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7753, skipped 13 characters."
          },
          {
            "offset": 7767,
            "line": 1,
            "column": 7768,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7767, skipped 13 characters."
          },
          {
            "offset": 7789,
            "line": 1,
            "column": 7790,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7789, skipped 1 characters."
          },
          {
            "offset": 7803,
            "line": 1,
            "column": 7804,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 7803, skipped 9 characters."
          },
          {
            "offset": 7814,
            "line": 1,
            "column": 7815,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 7814, skipped 9 characters."
          },
          {
            "offset": 7824,
            "line": 1,
            "column": 7825,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7824, skipped 13 characters."
          },
          {
            "offset": 7840,
            "line": 1,
            "column": 7841,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7840, skipped 1 characters."
          },
          {
            "offset": 7858,
            "line": 1,
            "column": 7859,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7858, skipped 13 characters."
          },
          {
            "offset": 7876,
            "line": 1,
            "column": 7877,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7876, skipped 1 characters."
          },
          {
            "offset": 7892,
            "line": 1,
            "column": 7893,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7892, skipped 13 characters."
          },
          {
            "offset": 7912,
            "line": 1,
            "column": 7913,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7912, skipped 1 characters."
          },
          {
            "offset": 7917,
            "line": 1,
            "column": 7918,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7917, skipped 13 characters."
          },
          {
            "offset": 7935,
            "line": 1,
            "column": 7936,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7935, skipped 1 characters."
          },
          {
            "offset": 7947,
            "line": 1,
            "column": 7948,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 7947, skipped 13 characters."
          },
          {
            "offset": 7969,
            "line": 1,
            "column": 7970,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 7969, skipped 1 characters."
          },
          {
            "offset": 7981,
            "line": 1,
            "column": 7982,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 7981, skipped 9 characters."
          },
          {
            "offset": 7991,
            "line": 1,
            "column": 7992,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 7991, skipped 5 characters."
          },
          {
            "offset": 7997,
            "line": 1,
            "column": 7998,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 7997, skipped 1 characters."
          },
          {
            "offset": 7999,
            "line": 1,
            "column": 8000,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 7999, skipped 5 characters."
          },
          {
            "offset": 8008,
            "line": 1,
            "column": 8009,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8008, skipped 1 characters."
          },
          {
            "offset": 8013,
            "line": 1,
            "column": 8014,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8013, skipped 1 characters."
          },
          {
            "offset": 8017,
            "line": 1,
            "column": 8018,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8017, skipped 1 characters."
          },
          {
            "offset": 8029,
            "line": 1,
            "column": 8030,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 8029, skipped 1 characters."
          },
          {
            "offset": 8039,
            "line": 1,
            "column": 8040,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8039, skipped 1 characters."
          },
          {
            "offset": 8041,
            "line": 1,
            "column": 8042,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 8041, skipped 5 characters."
          },
          {
            "offset": 8055,
            "line": 1,
            "column": 8056,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8055, skipped 1 characters."
          },
          {
            "offset": 8057,
            "line": 1,
            "column": 8058,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8057, skipped 9 characters."
          },
          {
            "offset": 8067,
            "line": 1,
            "column": 8068,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8067, skipped 13 characters."
          },
          {
            "offset": 8083,
            "line": 1,
            "column": 8084,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8083, skipped 1 characters."
          },
          {
            "offset": 8090,
            "line": 1,
            "column": 8091,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8090, skipped 13 characters."
          },
          {
            "offset": 8108,
            "line": 1,
            "column": 8109,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8108, skipped 1 characters."
          },
          {
            "offset": 8124,
            "line": 1,
            "column": 8125,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8124, skipped 13 characters."
          },
          {
            "offset": 8145,
            "line": 1,
            "column": 8146,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8145, skipped 1 characters."
          },
          {
            "offset": 8153,
            "line": 1,
            "column": 8154,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8153, skipped 13 characters."
          },
          {
            "offset": 8171,
            "line": 1,
            "column": 8172,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8171, skipped 1 characters."
          },
          {
            "offset": 8182,
            "line": 1,
            "column": 8183,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8182, skipped 13 characters."
          },
          {
            "offset": 8204,
            "line": 1,
            "column": 8205,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8204, skipped 1 characters."
          },
          {
            "offset": 8210,
            "line": 1,
            "column": 8211,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8210, skipped 13 characters."
          },
          {
            "offset": 8232,
            "line": 1,
            "column": 8233,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8232, skipped 1 characters."
          },
          {
            "offset": 8237,
            "line": 1,
            "column": 8238,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8237, skipped 13 characters."
          },
          {
            "offset": 8262,
            "line": 1,
            "column": 8263,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8262, skipped 1 characters."
          },
          {
            "offset": 8275,
            "line": 1,
            "column": 8276,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8275, skipped 9 characters."
          },
          {
            "offset": 8286,
            "line": 1,
            "column": 8287,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8286, skipped 9 characters."
          },
          {
            "offset": 8296,
            "line": 1,
            "column": 8297,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8296, skipped 13 characters."
          },
          {
            "offset": 8312,
            "line": 1,
            "column": 8313,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8312, skipped 1 characters."
          },
          {
            "offset": 8319,
            "line": 1,
            "column": 8320,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8319, skipped 13 characters."
          },
          {
            "offset": 8337,
            "line": 1,
            "column": 8338,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8337, skipped 1 characters."
          },
          {
            "offset": 8347,
            "line": 1,
            "column": 8348,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8347, skipped 13 characters."
          },
          {
            "offset": 8368,
            "line": 1,
            "column": 8369,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8368, skipped 1 characters."
          },
          {
            "offset": 8377,
            "line": 1,
            "column": 8378,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8377, skipped 13 characters."
          },
          {
            "offset": 8395,
            "line": 1,
            "column": 8396,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8395, skipped 1 characters."
          },
          {
            "offset": 8405,
            "line": 1,
            "column": 8406,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8405, skipped 13 characters."
          },
          {
            "offset": 8427,
            "line": 1,
            "column": 8428,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8427, skipped 1 characters."
          },
          {
            "offset": 8433,
            "line": 1,
            "column": 8434,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8433, skipped 13 characters."
          },
          {
            "offset": 8455,
            "line": 1,
            "column": 8456,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8455, skipped 1 characters."
          },
          {
            "offset": 8460,
            "line": 1,
            "column": 8461,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8460, skipped 13 characters."
          },
          {
            "offset": 8485,
            "line": 1,
            "column": 8486,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8485, skipped 1 characters."
          },
          {
            "offset": 8498,
            "line": 1,
            "column": 8499,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8498, skipped 9 characters."
          },
          {
            "offset": 8509,
            "line": 1,
            "column": 8510,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8509, skipped 9 characters."
          },
          {
            "offset": 8519,
            "line": 1,
            "column": 8520,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8519, skipped 13 characters."
          },
          {
            "offset": 8535,
            "line": 1,
            "column": 8536,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8535, skipped 1 characters."
          },
          {
            "offset": 8542,
            "line": 1,
            "column": 8543,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8542, skipped 13 characters."
          },
          {
            "offset": 8560,
            "line": 1,
            "column": 8561,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8560, skipped 1 characters."
          },
          {
            "offset": 8574,
            "line": 1,
            "column": 8575,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8574, skipped 13 characters."
          },
          {
            "offset": 8595,
            "line": 1,
            "column": 8596,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8595, skipped 1 characters."
          },
          {
            "offset": 8603,
            "line": 1,
            "column": 8604,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8603, skipped 13 characters."
          },
          {
            "offset": 8621,
            "line": 1,
            "column": 8622,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8621, skipped 1 characters."
          },
          {
            "offset": 8630,
            "line": 1,
            "column": 8631,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8630, skipped 13 characters."
          },
          {
            "offset": 8652,
            "line": 1,
            "column": 8653,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8652, skipped 1 characters."
          },
          {
            "offset": 8658,
            "line": 1,
            "column": 8659,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8658, skipped 13 characters."
          },
          {
            "offset": 8680,
            "line": 1,
            "column": 8681,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8680, skipped 1 characters."
          },
          {
            "offset": 8685,
            "line": 1,
            "column": 8686,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8685, skipped 13 characters."
          },
          {
            "offset": 8710,
            "line": 1,
            "column": 8711,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8710, skipped 1 characters."
          },
          {
            "offset": 8723,
            "line": 1,
            "column": 8724,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8723, skipped 9 characters."
          },
          {
            "offset": 8733,
            "line": 1,
            "column": 8734,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 8733, skipped 5 characters."
          },
          {
            "offset": 8740,
            "line": 1,
            "column": 8741,
            "length": 10,
            "message": "unexpected character: ->\n<- at offset: 8740, skipped 10 characters."
          },
          {
            "offset": 8763,
            "line": 1,
            "column": 8764,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8763, skipped 1 characters."
          },
          {
            "offset": 8765,
            "line": 1,
            "column": 8766,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8765, skipped 9 characters."
          },
          {
            "offset": 8775,
            "line": 1,
            "column": 8776,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8775, skipped 13 characters."
          },
          {
            "offset": 8791,
            "line": 1,
            "column": 8792,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8791, skipped 1 characters."
          },
          {
            "offset": 8796,
            "line": 1,
            "column": 8797,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8796, skipped 13 characters."
          },
          {
            "offset": 8819,
            "line": 1,
            "column": 8820,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8819, skipped 1 characters."
          },
          {
            "offset": 8826,
            "line": 1,
            "column": 8827,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8826, skipped 13 characters."
          },
          {
            "offset": 8846,
            "line": 1,
            "column": 8847,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8846, skipped 1 characters."
          },
          {
            "offset": 8853,
            "line": 1,
            "column": 8854,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8853, skipped 13 characters."
          },
          {
            "offset": 8878,
            "line": 1,
            "column": 8879,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8878, skipped 1 characters."
          },
          {
            "offset": 8894,
            "line": 1,
            "column": 8895,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8894, skipped 13 characters."
          },
          {
            "offset": 8912,
            "line": 1,
            "column": 8913,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8912, skipped 1 characters."
          },
          {
            "offset": 8925,
            "line": 1,
            "column": 8926,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8925, skipped 13 characters."
          },
          {
            "offset": 8947,
            "line": 1,
            "column": 8948,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8947, skipped 1 characters."
          },
          {
            "offset": 8954,
            "line": 1,
            "column": 8955,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 8954, skipped 13 characters."
          },
          {
            "offset": 8976,
            "line": 1,
            "column": 8977,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 8976, skipped 1 characters."
          },
          {
            "offset": 8982,
            "line": 1,
            "column": 8983,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8982, skipped 9 characters."
          },
          {
            "offset": 8993,
            "line": 1,
            "column": 8994,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 8993, skipped 9 characters."
          },
          {
            "offset": 9003,
            "line": 1,
            "column": 9004,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9003, skipped 13 characters."
          },
          {
            "offset": 9019,
            "line": 1,
            "column": 9020,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9019, skipped 1 characters."
          },
          {
            "offset": 9024,
            "line": 1,
            "column": 9025,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9024, skipped 13 characters."
          },
          {
            "offset": 9047,
            "line": 1,
            "column": 9048,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9047, skipped 1 characters."
          },
          {
            "offset": 9054,
            "line": 1,
            "column": 9055,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9054, skipped 13 characters."
          },
          {
            "offset": 9074,
            "line": 1,
            "column": 9075,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9074, skipped 1 characters."
          },
          {
            "offset": 9082,
            "line": 1,
            "column": 9083,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9082, skipped 13 characters."
          },
          {
            "offset": 9107,
            "line": 1,
            "column": 9108,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9107, skipped 1 characters."
          },
          {
            "offset": 9116,
            "line": 1,
            "column": 9117,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9116, skipped 13 characters."
          },
          {
            "offset": 9134,
            "line": 1,
            "column": 9135,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9134, skipped 1 characters."
          },
          {
            "offset": 9147,
            "line": 1,
            "column": 9148,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9147, skipped 13 characters."
          },
          {
            "offset": 9169,
            "line": 1,
            "column": 9170,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9169, skipped 1 characters."
          },
          {
            "offset": 9178,
            "line": 1,
            "column": 9179,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9178, skipped 13 characters."
          },
          {
            "offset": 9200,
            "line": 1,
            "column": 9201,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9200, skipped 1 characters."
          },
          {
            "offset": 9205,
            "line": 1,
            "column": 9206,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9205, skipped 9 characters."
          },
          {
            "offset": 9216,
            "line": 1,
            "column": 9217,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9216, skipped 9 characters."
          },
          {
            "offset": 9226,
            "line": 1,
            "column": 9227,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9226, skipped 13 characters."
          },
          {
            "offset": 9242,
            "line": 1,
            "column": 9243,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9242, skipped 1 characters."
          },
          {
            "offset": 9247,
            "line": 1,
            "column": 9248,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9247, skipped 13 characters."
          },
          {
            "offset": 9270,
            "line": 1,
            "column": 9271,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9270, skipped 1 characters."
          },
          {
            "offset": 9277,
            "line": 1,
            "column": 9278,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9277, skipped 13 characters."
          },
          {
            "offset": 9297,
            "line": 1,
            "column": 9298,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9297, skipped 1 characters."
          },
          {
            "offset": 9304,
            "line": 1,
            "column": 9305,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9304, skipped 13 characters."
          },
          {
            "offset": 9329,
            "line": 1,
            "column": 9330,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9329, skipped 1 characters."
          },
          {
            "offset": 9345,
            "line": 1,
            "column": 9346,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9345, skipped 13 characters."
          },
          {
            "offset": 9363,
            "line": 1,
            "column": 9364,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9363, skipped 1 characters."
          },
          {
            "offset": 9376,
            "line": 1,
            "column": 9377,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9376, skipped 13 characters."
          },
          {
            "offset": 9398,
            "line": 1,
            "column": 9399,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9398, skipped 1 characters."
          },
          {
            "offset": 9410,
            "line": 1,
            "column": 9411,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9410, skipped 13 characters."
          },
          {
            "offset": 9432,
            "line": 1,
            "column": 9433,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9432, skipped 1 characters."
          },
          {
            "offset": 9438,
            "line": 1,
            "column": 9439,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9438, skipped 9 characters."
          },
          {
            "offset": 9448,
            "line": 1,
            "column": 9449,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 9448, skipped 5 characters."
          },
          {
            "offset": 9455,
            "line": 1,
            "column": 9456,
            "length": 10,
            "message": "unexpected character: ->\n<- at offset: 9455, skipped 10 characters."
          },
          {
            "offset": 9476,
            "line": 1,
            "column": 9477,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9476, skipped 1 characters."
          },
          {
            "offset": 9478,
            "line": 1,
            "column": 9479,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9478, skipped 9 characters."
          },
          {
            "offset": 9488,
            "line": 1,
            "column": 9489,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9488, skipped 13 characters."
          },
          {
            "offset": 9504,
            "line": 1,
            "column": 9505,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9504, skipped 1 characters."
          },
          {
            "offset": 9511,
            "line": 1,
            "column": 9512,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9511, skipped 13 characters."
          },
          {
            "offset": 9529,
            "line": 1,
            "column": 9530,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9529, skipped 1 characters."
          },
          {
            "offset": 9536,
            "line": 1,
            "column": 9537,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9536, skipped 13 characters."
          },
          {
            "offset": 9555,
            "line": 1,
            "column": 9556,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9555, skipped 1 characters."
          },
          {
            "offset": 9565,
            "line": 1,
            "column": 9566,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9565, skipped 13 characters."
          },
          {
            "offset": 9583,
            "line": 1,
            "column": 9584,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9583, skipped 1 characters."
          },
          {
            "offset": 9596,
            "line": 1,
            "column": 9597,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9596, skipped 9 characters."
          },
          {
            "offset": 9607,
            "line": 1,
            "column": 9608,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9607, skipped 9 characters."
          },
          {
            "offset": 9617,
            "line": 1,
            "column": 9618,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9617, skipped 13 characters."
          },
          {
            "offset": 9633,
            "line": 1,
            "column": 9634,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9633, skipped 1 characters."
          },
          {
            "offset": 9640,
            "line": 1,
            "column": 9641,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9640, skipped 13 characters."
          },
          {
            "offset": 9658,
            "line": 1,
            "column": 9659,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9658, skipped 1 characters."
          },
          {
            "offset": 9670,
            "line": 1,
            "column": 9671,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9670, skipped 13 characters."
          },
          {
            "offset": 9689,
            "line": 1,
            "column": 9690,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9689, skipped 1 characters."
          },
          {
            "offset": 9699,
            "line": 1,
            "column": 9700,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9699, skipped 13 characters."
          },
          {
            "offset": 9717,
            "line": 1,
            "column": 9718,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9717, skipped 1 characters."
          },
          {
            "offset": 9723,
            "line": 1,
            "column": 9724,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9723, skipped 9 characters."
          },
          {
            "offset": 9734,
            "line": 1,
            "column": 9735,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9734, skipped 9 characters."
          },
          {
            "offset": 9744,
            "line": 1,
            "column": 9745,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9744, skipped 13 characters."
          },
          {
            "offset": 9760,
            "line": 1,
            "column": 9761,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9760, skipped 1 characters."
          },
          {
            "offset": 9767,
            "line": 1,
            "column": 9768,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9767, skipped 13 characters."
          },
          {
            "offset": 9785,
            "line": 1,
            "column": 9786,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9785, skipped 1 characters."
          },
          {
            "offset": 9797,
            "line": 1,
            "column": 9798,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9797, skipped 13 characters."
          },
          {
            "offset": 9816,
            "line": 1,
            "column": 9817,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9816, skipped 1 characters."
          },
          {
            "offset": 9826,
            "line": 1,
            "column": 9827,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9826, skipped 13 characters."
          },
          {
            "offset": 9844,
            "line": 1,
            "column": 9845,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9844, skipped 1 characters."
          },
          {
            "offset": 9851,
            "line": 1,
            "column": 9852,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9851, skipped 9 characters."
          },
          {
            "offset": 9862,
            "line": 1,
            "column": 9863,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9862, skipped 9 characters."
          },
          {
            "offset": 9872,
            "line": 1,
            "column": 9873,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9872, skipped 13 characters."
          },
          {
            "offset": 9888,
            "line": 1,
            "column": 9889,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9888, skipped 1 characters."
          },
          {
            "offset": 9895,
            "line": 1,
            "column": 9896,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9895, skipped 13 characters."
          },
          {
            "offset": 9913,
            "line": 1,
            "column": 9914,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9913, skipped 1 characters."
          },
          {
            "offset": 9929,
            "line": 1,
            "column": 9930,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9929, skipped 13 characters."
          },
          {
            "offset": 9948,
            "line": 1,
            "column": 9949,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9948, skipped 1 characters."
          },
          {
            "offset": 9958,
            "line": 1,
            "column": 9959,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 9958, skipped 13 characters."
          },
          {
            "offset": 9976,
            "line": 1,
            "column": 9977,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 9976, skipped 1 characters."
          },
          {
            "offset": 9983,
            "line": 1,
            "column": 9984,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9983, skipped 9 characters."
          },
          {
            "offset": 9994,
            "line": 1,
            "column": 9995,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 9994, skipped 9 characters."
          },
          {
            "offset": 10004,
            "line": 1,
            "column": 10005,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 10004, skipped 13 characters."
          },
          {
            "offset": 10020,
            "line": 1,
            "column": 10021,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 10020, skipped 1 characters."
          },
          {
            "offset": 10027,
            "line": 1,
            "column": 10028,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 10027, skipped 13 characters."
          },
          {
            "offset": 10045,
            "line": 1,
            "column": 10046,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 10045, skipped 1 characters."
          },
          {
            "offset": 10054,
            "line": 1,
            "column": 10055,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 10054, skipped 13 characters."
          },
          {
            "offset": 10073,
            "line": 1,
            "column": 10074,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 10073, skipped 1 characters."
          },
          {
            "offset": 10083,
            "line": 1,
            "column": 10084,
            "length": 13,
            "message": "unexpected character: ->\n<- at offset: 10083, skipped 13 characters."
          },
          {
            "offset": 10101,
            "line": 1,
            "column": 10102,
            "length": 1,
            "message": "unexpected character: -> <- at offset: 10101, skipped 1 characters."
          },
          {
            "offset": 10110,
            "line": 1,
            "column": 10111,
            "length": 9,
            "message": "unexpected character: ->\n<- at offset: 10110, skipped 9 characters."
          },
          {
            "offset": 10120,
            "line": 1,
            "column": 10121,
            "length": 5,
            "message": "unexpected character: ->\n<- at offset: 10120, skipped 5 characters."
          },
          {
            "offset": 10126,
            "line": 1,
            "column": 10127,
            "length": 1,
            "message": "unexpected character: ->\n<- at offset: 10126, skipped 1 characters."
          }
        ],
        "lexerReport": {
          "diagnostics": []
        },
        "parserErrors": [
          {
            "token": {
              "image": "finance",
              "startOffset": 3,
              "endOffset": 9,
              "startLine": 1,
              "endLine": 1,
              "startColumn": 4,
              "endColumn": 10,
              "tokenTypeIdx": 88,
              "tokenType": "[Circular]"
            },
            "resyncedTokens": [],
            "previousToken": {
              "image": "",
              "startOffset": null,
              "endOffset": null,
              "startLine": null,
              "endLine": null,
              "startColumn": null,
              "endColumn": null,
              "tokenTypeIdx": 1,
              "tokenType": {
                "name": "EOF",
                "PATTERN": {},
                "tokenTypeIdx": 1,
                "CATEGORIES": [],
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false
              }
            },
            "name": "MismatchedTokenException",
            "context": {
              "ruleStack": [
                "App​"
              ],
              "ruleOccurrenceStack": [
                0
              ]
            }
          },
          {
            "token": {
              "image": "app",
              "startOffset": 11,
              "endOffset": 13,
              "startLine": 1,
              "endLine": 1,
              "startColumn": 12,
              "endColumn": 14,
              "tokenTypeIdx": 72,
              "tokenType": {
                "name": "app",
                "PATTERN": "app",
                "LONGER_ALT": [
                  "[Circular]"
                ],
                "tokenTypeIdx": 72,
                "CATEGORIES": [],
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false
              }
            },
            "resyncedTokens": [],
            "previousToken": "[Circular]",
            "name": "MismatchedTokenException",
            "context": {
              "ruleStack": [
                "App​"
              ],
              "ruleOccurrenceStack": [
                0
              ]
            }
          },
          {
            "token": "[Circular]",
            "resyncedTokens": [],
            "name": "NotAllInputParsedException",
            "context": {
              "ruleStack": [],
              "ruleOccurrenceStack": []
            }
          }
        ]
      },
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/timhalmshaw/dev/AI/finance-app-dsl/langium/finance-app-dsl/examples/finance-app.finapp",
        "external": "file:///Users/timhalmshaw/dev/AI/finance-app-dsl/langium/finance-app-dsl/examples/finance-app.finapp",
        "path": "/Users/timhalmshaw/dev/AI/finance-app-dsl/langium/finance-app-dsl/examples/finance-app.finapp",
        "scheme": "file"
      },
      "state": 5,
      "references": [],
      "textDocument": {
        "_uri": "file:///Users/timhalmshaw/dev/AI/finance-app-dsl/langium/finance-app-dsl/examples/finance-app.finapp",
        "_languageId": "finance-app-dsl",
        "_version": 0,
        "_content": "// finance-app.finapp - Example DSL file for a personal finance app\n\napp FinanceTracker {\n    name: \"Personal Finance Tracker\"\n    id: \"com.example.financetracker\"\n    version: \"1.0.0\"\n    platforms: [ios, android, web]\n    theme: {\n        primaryColor: \"#007AFF\"\n        secondaryColor: \"#5AC8FA\"\n        backgroundColor: \"#F2F2F7\"\n        textColor: \"#000000\"\n    }\n}\n\n// Data models\nmodel Account {\n    id: string required\n    name: string required\n    balance: decimal required\n    type: string required enum: [checking, savings, credit, investment]\n    currency: string default: \"USD\"\n    isActive: boolean default: true\n    lastUpdated: date\n}\n\nmodel Transaction {\n    id: string required\n    accountId: string required\n    amount: decimal required\n    description: string required\n    date: date required\n    category: string\n    isIncome: boolean default: false\n    notes: string\n    tags: string[]\n}\n\nmodel Category {\n    id: string required\n    name: string required\n    color: string\n    icon: string\n    isSystem: boolean default: false\n}\n\n// Screens\nscreen AccountSummary {\n    title: \"Accounts\"\n    initial\n    \n    layout: {\n        type: stack\n        components: [\n            {\n                type: header\n                title: \"Your Accounts\"\n            },\n            {\n                type: accountSummaryCard\n                data: totalBalance\n                properties: {\n                    title: \"Total Balance\",\n                    showCurrency: true\n                }\n            },\n            {\n                type: divider\n            },\n            {\n                type: list\n                data: accounts\n                properties: {\n                    itemType: \"accountCard\",\n                    showBalance: true\n                }\n                actions: {\n                    onTap: {\n                        navigate: AccountDetail\n                        params: {\n                            accountId: \"item.id\"\n                        }\n                    }\n                }\n            },\n            {\n                type: button\n                text: \"Add Account\"\n                properties: {\n                    style: \"primary\",\n                    fullWidth: true\n                }\n                actions: {\n                    onTap: {\n                        navigate: AddAccount\n                    }\n                }\n            }\n        ]\n    }\n}\n\nscreen AccountDetail {\n    title: \"Account Details\"\n    params: {\n        accountId: string required\n    }\n    \n    layout: {\n        type: stack\n        components: [\n            {\n                type: header\n                title: \"{{account.name}}\"\n                subtitle: \"{{account.type}}\"\n            },\n            {\n                type: balanceCard\n                data: account.balance\n                properties: {\n                    showCurrency: true,\n                    showChange: true\n                }\n            },\n            {\n                type: tabs\n                items: [\n                    {\n                        type: text\n                        title: \"Transactions\"\n                        properties: {\n                            data: transactions,\n                            itemType: \"transactionItem\",\n                            showDate: true,\n                            showCategory: true\n                        }\n                        actions: {\n                            onTap: {\n                                navigate: TransactionDetail\n                                params: {\n                                    transactionId: \"item.id\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        type: chart\n                        title: \"Statistics\"\n                        properties: {\n                            chartType: \"pie\",\n                            data: \"transactionsByCategory\"\n                        }\n                    }\n                ]\n            },\n            {\n                type: button\n                text: \"Add Transaction\"\n                properties: {\n                    style: \"primary\"\n                }\n                actions: {\n                    onTap: {\n                        navigate: AddTransaction\n                        params: {\n                            accountId: \"account.id\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}\n\nscreen AddTransaction {\n    title: \"Add Transaction\"\n    params: {\n        accountId: string required\n    }\n    \n    layout: {\n        type: form\n        submitButton: \"Save\"\n        cancelButton: \"Cancel\"\n        actions: {\n            onSubmit: {\n                api: createTransaction\n                navigate: AccountDetail\n                params: {\n                    accountId: \"params.accountId\"\n                }\n            },\n            onCancel: {\n                navigate: AccountDetail\n                params: {\n                    accountId: \"params.accountId\"\n                }\n            }\n        }\n        fields: [\n            {\n                type: text\n                name: description\n                label: \"Description\"\n                required\n            },\n            {\n                type: number\n                name: amount\n                label: \"Amount\"\n                required\n                properties: {\n                    decimalPlaces: 2,\n                    currency: true\n                }\n            },\n            {\n                type: toggle\n                name: isIncome\n                label: \"Is Income\"\n            },\n            {\n                type: select\n                name: category\n                label: \"Category\"\n                options: {\n                    data: categories\n                    labelField: \"name\"\n                    valueField: \"id\"\n                }\n            },\n            {\n                type: datePicker\n                name: date\n                label: \"Date\"\n            }\n        ]\n    }\n}\n\n// App navigation\nnavigation: {\n    type: tab\n    items: [\n        {\n            title: \"Accounts\"\n            icon: \"wallet\"\n            screen: AccountSummary\n        },\n        {\n            title: \"Transactions\"\n            icon: \"list\"\n            screen: AccountDetail\n        },\n        {\n            title: \"Budget\"\n            icon: \"chart\"\n            screen: AccountSummary  // Placeholder until we have a Budget screen\n        },\n        {\n            title: \"Settings\"\n            icon: \"gear\"\n            screen: AccountSummary  // Placeholder until we have a Settings screen\n        }\n    ]\n}\n\n// API configuration\napi: {\n    baseUrl: \"https://api.example.com/v1\"\n    mock\n    endpoints: [\n        {\n            id: getAccounts\n            path: \"/accounts\"\n            method: GET\n            response: Account[]\n        },\n        {\n            id: getAccount\n            path: \"/accounts/{accountId}\"\n            method: GET\n            params: [\n                {\n                    name: accountId\n                    type: string\n                    required\n                }\n            ]\n            response: Account\n        },\n        {\n            id: getTransactions\n            path: \"/accounts/{accountId}/transactions\"\n            method: GET\n            params: [\n                {\n                    name: accountId\n                    type: string\n                    required\n                },\n                {\n                    name: startDate\n                    type: date\n                },\n                {\n                    name: endDate\n                    type: date\n                }\n            ]\n            response: Transaction[]\n        },\n        {\n            id: createTransaction\n            path: \"/transactions\"\n            method: POST\n            body: Transaction\n            response: Transaction\n        }\n    ]\n}\n\n// Mock data for development\nmockData: {\n    accounts: [\n        {\n            id: \"acc1\"\n            name: \"Main Checking\"\n            balance: 2540.50\n            type: \"checking\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-20\"\n        },\n        {\n            id: \"acc2\"\n            name: \"Savings\"\n            balance: 12750.75\n            type: \"savings\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-19\"\n        },\n        {\n            id: \"acc3\"\n            name: \"Credit Card\"\n            balance: -450.25\n            type: \"credit\"\n            currency: \"USD\"\n            isActive: true\n            lastUpdated: \"2025-03-18\"\n        }\n    ],\n    \n    transactions: [\n        {\n            id: \"t1\"\n            accountId: \"acc1\"\n            amount: -45.50\n            description: \"Grocery Store\"\n            date: \"2025-03-18\"\n            category: \"Food\"\n            isIncome: false\n        },\n        {\n            id: \"t2\"\n            accountId: \"acc1\"\n            amount: 1250.00\n            description: \"Salary\"\n            date: \"2025-03-15\"\n            category: \"Income\"\n            isIncome: true\n        },\n        {\n            id: \"t3\"\n            accountId: \"acc1\"\n            amount: -75.00\n            description: \"Electric Bill\"\n            date: \"2025-03-10\"\n            category: \"Utilities\"\n            isIncome: false\n        }\n    ],\n    \n    categories: [\n        {\n            id: \"cat1\"\n            name: \"Food\"\n            color: \"#FF9500\"\n            icon: \"restaurant\"\n        },\n        {\n            id: \"cat2\"\n            name: \"Transport\"\n            color: \"#5AC8FA\"\n            icon: \"car\"\n        },\n        {\n            id: \"cat3\"\n            name: \"Utilities\"\n            color: \"#FFCC00\"\n            icon: \"bolt\"\n        },\n        {\n            id: \"cat4\"\n            name: \"Entertainment\"\n            color: \"#FF2D55\"\n            icon: \"film\"\n        },\n        {\n            id: \"cat5\"\n            name: \"Income\"\n            color: \"#4CD964\"\n            icon: \"wallet\"\n        }\n    ]\n}"
      },
      "precomputedScopes": {
        "map": {}
      }
    }
  },
  "_rangeCache": {
    "start": "[Circular]",
    "end": "[Circular]"
  }
}